ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Pwm.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	Pwm_initVar
  20              		.bss
  21              		.type	Pwm_initVar, %object
  22              		.size	Pwm_initVar, 1
  23              	Pwm_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.Pwm_Start,"ax",%progbits
  26              		.align	2
  27              		.global	Pwm_Start
  28              		.code	16
  29              		.thumb_func
  30              		.type	Pwm_Start, %function
  31              	Pwm_Start:
  32              	.LFB2:
  33              		.file 1 "Generated_Source\\PSoC4\\Pwm.c"
   1:Generated_Source\PSoC4/Pwm.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Pwm.c **** * File Name: Pwm.c
   3:Generated_Source\PSoC4/Pwm.c **** * Version 3.30
   4:Generated_Source\PSoC4/Pwm.c **** *
   5:Generated_Source\PSoC4/Pwm.c **** * Description:
   6:Generated_Source\PSoC4/Pwm.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/Pwm.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/Pwm.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/Pwm.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/Pwm.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/Pwm.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/Pwm.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/Pwm.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/Pwm.c **** *
  15:Generated_Source\PSoC4/Pwm.c **** * Note:
  16:Generated_Source\PSoC4/Pwm.c **** *
  17:Generated_Source\PSoC4/Pwm.c **** *******************************************************************************
  18:Generated_Source\PSoC4/Pwm.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/Pwm.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/Pwm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/Pwm.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/Pwm.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/Pwm.c **** 
  24:Generated_Source\PSoC4/Pwm.c **** #include "Pwm.h"
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 2


  25:Generated_Source\PSoC4/Pwm.c **** 
  26:Generated_Source\PSoC4/Pwm.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/Pwm.c **** #ifdef Pwm_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/Pwm.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/Pwm.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/Pwm.c **** #endif /* Pwm_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC4/Pwm.c **** 
  32:Generated_Source\PSoC4/Pwm.c **** uint8 Pwm_initVar = 0u;
  33:Generated_Source\PSoC4/Pwm.c **** 
  34:Generated_Source\PSoC4/Pwm.c **** 
  35:Generated_Source\PSoC4/Pwm.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/Pwm.c **** * Function Name: Pwm_Start
  37:Generated_Source\PSoC4/Pwm.c **** ********************************************************************************
  38:Generated_Source\PSoC4/Pwm.c **** *
  39:Generated_Source\PSoC4/Pwm.c **** * Summary:
  40:Generated_Source\PSoC4/Pwm.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/Pwm.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/Pwm.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/Pwm.c **** *
  44:Generated_Source\PSoC4/Pwm.c **** * Parameters:
  45:Generated_Source\PSoC4/Pwm.c **** *  None
  46:Generated_Source\PSoC4/Pwm.c **** *
  47:Generated_Source\PSoC4/Pwm.c **** * Return:
  48:Generated_Source\PSoC4/Pwm.c **** *  None
  49:Generated_Source\PSoC4/Pwm.c **** *
  50:Generated_Source\PSoC4/Pwm.c **** * Global variables:
  51:Generated_Source\PSoC4/Pwm.c **** *  Pwm_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/Pwm.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/Pwm.c **** *
  54:Generated_Source\PSoC4/Pwm.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/Pwm.c **** void Pwm_Start(void) 
  56:Generated_Source\PSoC4/Pwm.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC4/Pwm.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/Pwm.c ****     if(Pwm_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC4/Pwm.c ****     {
  60:Generated_Source\PSoC4/Pwm.c ****         Pwm_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	Pwm_Init
  61:Generated_Source\PSoC4/Pwm.c ****         Pwm_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC4/Pwm.c ****     }
  63:Generated_Source\PSoC4/Pwm.c ****     Pwm_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	Pwm_Enable
  64:Generated_Source\PSoC4/Pwm.c **** 
  65:Generated_Source\PSoC4/Pwm.c **** }
  58              		.loc 1 65 0
  59 001a C046     		nop
  60 001c BD46     		mov	sp, r7
  61              		@ sp needed
  62 001e 80BD     		pop	{r7, pc}
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 0020 00000000 		.word	Pwm_initVar
  67              		.cfi_endproc
  68              	.LFE2:
  69              		.size	Pwm_Start, .-Pwm_Start
  70              		.section	.text.Pwm_Init,"ax",%progbits
  71              		.align	2
  72              		.global	Pwm_Init
  73              		.code	16
  74              		.thumb_func
  75              		.type	Pwm_Init, %function
  76              	Pwm_Init:
  77              	.LFB3:
  66:Generated_Source\PSoC4/Pwm.c **** 
  67:Generated_Source\PSoC4/Pwm.c **** 
  68:Generated_Source\PSoC4/Pwm.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/Pwm.c **** * Function Name: Pwm_Init
  70:Generated_Source\PSoC4/Pwm.c **** ********************************************************************************
  71:Generated_Source\PSoC4/Pwm.c **** *
  72:Generated_Source\PSoC4/Pwm.c **** * Summary:
  73:Generated_Source\PSoC4/Pwm.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/Pwm.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/Pwm.c **** *  Pwm_Start().
  76:Generated_Source\PSoC4/Pwm.c **** *
  77:Generated_Source\PSoC4/Pwm.c **** * Parameters:
  78:Generated_Source\PSoC4/Pwm.c **** *  None
  79:Generated_Source\PSoC4/Pwm.c **** *
  80:Generated_Source\PSoC4/Pwm.c **** * Return:
  81:Generated_Source\PSoC4/Pwm.c **** *  None
  82:Generated_Source\PSoC4/Pwm.c **** *
  83:Generated_Source\PSoC4/Pwm.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/Pwm.c **** void Pwm_Init(void) 
  85:Generated_Source\PSoC4/Pwm.c **** {
  78              		.loc 1 85 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 8
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 80B5     		push	{r7, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 4


  87              		.cfi_def_cfa_offset 16
  88 0004 00AF     		add	r7, sp, #0
  89              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC4/Pwm.c ****     #if (Pwm_UsingFixedFunction || Pwm_UseControl)
  87:Generated_Source\PSoC4/Pwm.c ****         uint8 ctrl;
  88:Generated_Source\PSoC4/Pwm.c ****     #endif /* (Pwm_UsingFixedFunction || Pwm_UseControl) */
  89:Generated_Source\PSoC4/Pwm.c **** 
  90:Generated_Source\PSoC4/Pwm.c ****     #if(!Pwm_UsingFixedFunction)
  91:Generated_Source\PSoC4/Pwm.c ****         #if(Pwm_UseStatus)
  92:Generated_Source\PSoC4/Pwm.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/Pwm.c ****             uint8 Pwm_interruptState;
  94:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_UseStatus) */
  95:Generated_Source\PSoC4/Pwm.c ****     #endif /* (!Pwm_UsingFixedFunction) */
  96:Generated_Source\PSoC4/Pwm.c **** 
  97:Generated_Source\PSoC4/Pwm.c ****     #if (Pwm_UsingFixedFunction)
  98:Generated_Source\PSoC4/Pwm.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/Pwm.c ****         Pwm_CONTROL |= Pwm_CFG0_MODE;
 100:Generated_Source\PSoC4/Pwm.c ****         #if (Pwm_DeadBand2_4)
 101:Generated_Source\PSoC4/Pwm.c ****             Pwm_CONTROL |= Pwm_CFG0_DB;
 102:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_DeadBand2_4) */
 103:Generated_Source\PSoC4/Pwm.c **** 
 104:Generated_Source\PSoC4/Pwm.c ****         ctrl = Pwm_CONTROL3 & ((uint8 )(~Pwm_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/Pwm.c ****         Pwm_CONTROL3 = ctrl | Pwm_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/Pwm.c **** 
 107:Generated_Source\PSoC4/Pwm.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/Pwm.c ****         Pwm_RT1 &= ((uint8)(~Pwm_RT1_MASK));
 109:Generated_Source\PSoC4/Pwm.c ****         Pwm_RT1 |= Pwm_SYNC;
 110:Generated_Source\PSoC4/Pwm.c **** 
 111:Generated_Source\PSoC4/Pwm.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/Pwm.c ****         Pwm_RT1 &= ((uint8)(~Pwm_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/Pwm.c ****         Pwm_RT1 |= Pwm_SYNCDSI_EN;
 114:Generated_Source\PSoC4/Pwm.c **** 
 115:Generated_Source\PSoC4/Pwm.c ****     #elif (Pwm_UseControl)
 116:Generated_Source\PSoC4/Pwm.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/Pwm.c ****         ctrl = Pwm_CONTROL & ((uint8)(~Pwm_CTRL_CMPMODE2_MASK)) &
  90              		.loc 1 117 0
  91 0006 134B     		ldr	r3, .L6
  92 0008 1B78     		ldrb	r3, [r3]
  93 000a DAB2     		uxtb	r2, r3
  94 000c FB1D     		adds	r3, r7, #7
  95 000e 3F21     		movs	r1, #63
  96 0010 8A43     		bics	r2, r1
  97 0012 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC4/Pwm.c ****                 ((uint8)(~Pwm_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/Pwm.c ****         Pwm_CONTROL = ctrl | Pwm_DEFAULT_COMPARE2_MODE |
  98              		.loc 1 119 0
  99 0014 0F4A     		ldr	r2, .L6
 100 0016 FB1D     		adds	r3, r7, #7
 101 0018 1B78     		ldrb	r3, [r3]
 102 001a 0921     		movs	r1, #9
 103 001c 0B43     		orrs	r3, r1
 104 001e DBB2     		uxtb	r3, r3
 105 0020 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC4/Pwm.c ****                                    Pwm_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/Pwm.c ****     #endif /* (Pwm_UsingFixedFunction) */
 122:Generated_Source\PSoC4/Pwm.c **** 
 123:Generated_Source\PSoC4/Pwm.c ****     #if (!Pwm_UsingFixedFunction)
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 5


 124:Generated_Source\PSoC4/Pwm.c ****         #if (Pwm_Resolution == 8)
 125:Generated_Source\PSoC4/Pwm.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/Pwm.c ****             Pwm_AUX_CONTROLDP0 |= (Pwm_AUX_CTRL_FIFO0_CLR);
 106              		.loc 1 126 0
 107 0022 0D4A     		ldr	r2, .L6+4
 108 0024 0C4B     		ldr	r3, .L6+4
 109 0026 1B78     		ldrb	r3, [r3]
 110 0028 DBB2     		uxtb	r3, r3
 111 002a 0121     		movs	r1, #1
 112 002c 0B43     		orrs	r3, r1
 113 002e DBB2     		uxtb	r3, r3
 114 0030 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC4/Pwm.c ****         #else /* (Pwm_Resolution == 16)*/
 128:Generated_Source\PSoC4/Pwm.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/Pwm.c ****             Pwm_AUX_CONTROLDP0 |= (Pwm_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/Pwm.c ****             Pwm_AUX_CONTROLDP1 |= (Pwm_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_Resolution == 8) */
 132:Generated_Source\PSoC4/Pwm.c **** 
 133:Generated_Source\PSoC4/Pwm.c ****         Pwm_WriteCounter(Pwm_INIT_PERIOD_VALUE);
 115              		.loc 1 133 0
 116 0032 FF20     		movs	r0, #255
 117 0034 FFF7FEFF 		bl	Pwm_WriteCounter
 134:Generated_Source\PSoC4/Pwm.c ****     #endif /* (!Pwm_UsingFixedFunction) */
 135:Generated_Source\PSoC4/Pwm.c **** 
 136:Generated_Source\PSoC4/Pwm.c ****     Pwm_WritePeriod(Pwm_INIT_PERIOD_VALUE);
 118              		.loc 1 136 0
 119 0038 FF20     		movs	r0, #255
 120 003a FFF7FEFF 		bl	Pwm_WritePeriod
 137:Generated_Source\PSoC4/Pwm.c **** 
 138:Generated_Source\PSoC4/Pwm.c ****         #if (Pwm_UseOneCompareMode)
 139:Generated_Source\PSoC4/Pwm.c ****             Pwm_WriteCompare(Pwm_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/Pwm.c ****         #else
 141:Generated_Source\PSoC4/Pwm.c ****             Pwm_WriteCompare1(Pwm_INIT_COMPARE_VALUE1);
 121              		.loc 1 141 0
 122 003e 7F20     		movs	r0, #127
 123 0040 FFF7FEFF 		bl	Pwm_WriteCompare1
 142:Generated_Source\PSoC4/Pwm.c ****             Pwm_WriteCompare2(Pwm_INIT_COMPARE_VALUE2);
 124              		.loc 1 142 0
 125 0044 7F20     		movs	r0, #127
 126 0046 FFF7FEFF 		bl	Pwm_WriteCompare2
 143:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_UseOneCompareMode) */
 144:Generated_Source\PSoC4/Pwm.c **** 
 145:Generated_Source\PSoC4/Pwm.c ****         #if (Pwm_KillModeMinTime)
 146:Generated_Source\PSoC4/Pwm.c ****             Pwm_WriteKillTime(Pwm_MinimumKillTime);
 147:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_KillModeMinTime) */
 148:Generated_Source\PSoC4/Pwm.c **** 
 149:Generated_Source\PSoC4/Pwm.c ****         #if (Pwm_DeadBandUsed)
 150:Generated_Source\PSoC4/Pwm.c ****             Pwm_WriteDeadTime(Pwm_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_DeadBandUsed) */
 152:Generated_Source\PSoC4/Pwm.c **** 
 153:Generated_Source\PSoC4/Pwm.c ****     #if (Pwm_UseStatus || Pwm_UsingFixedFunction)
 154:Generated_Source\PSoC4/Pwm.c ****         Pwm_SetInterruptMode(Pwm_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC4/Pwm.c ****     #endif /* (Pwm_UseStatus || Pwm_UsingFixedFunction) */
 156:Generated_Source\PSoC4/Pwm.c **** 
 157:Generated_Source\PSoC4/Pwm.c ****     #if (Pwm_UsingFixedFunction)
 158:Generated_Source\PSoC4/Pwm.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/Pwm.c ****         Pwm_GLOBAL_ENABLE |= Pwm_BLOCK_EN_MASK;
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 6


 160:Generated_Source\PSoC4/Pwm.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/Pwm.c ****         Pwm_CONTROL2 |= Pwm_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/Pwm.c ****     #else
 163:Generated_Source\PSoC4/Pwm.c ****         #if(Pwm_UseStatus)
 164:Generated_Source\PSoC4/Pwm.c **** 
 165:Generated_Source\PSoC4/Pwm.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/Pwm.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/Pwm.c ****             Pwm_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC4/Pwm.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/Pwm.c ****             Pwm_STATUS_AUX_CTRL |= Pwm_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC4/Pwm.c **** 
 171:Generated_Source\PSoC4/Pwm.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/Pwm.c ****             CyExitCriticalSection(Pwm_interruptState);
 173:Generated_Source\PSoC4/Pwm.c **** 
 174:Generated_Source\PSoC4/Pwm.c ****             /* Clear the FIFO to enable the Pwm_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/Pwm.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/Pwm.c ****             Pwm_ClearFIFO();
 177:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_UseStatus) */
 178:Generated_Source\PSoC4/Pwm.c ****     #endif /* (Pwm_UsingFixedFunction) */
 179:Generated_Source\PSoC4/Pwm.c **** }
 127              		.loc 1 179 0
 128 004a C046     		nop
 129 004c BD46     		mov	sp, r7
 130 004e 02B0     		add	sp, sp, #8
 131              		@ sp needed
 132 0050 80BD     		pop	{r7, pc}
 133              	.L7:
 134 0052 C046     		.align	2
 135              	.L6:
 136 0054 72000F40 		.word	1074724978
 137 0058 92000F40 		.word	1074725010
 138              		.cfi_endproc
 139              	.LFE3:
 140              		.size	Pwm_Init, .-Pwm_Init
 141              		.section	.text.Pwm_Enable,"ax",%progbits
 142              		.align	2
 143              		.global	Pwm_Enable
 144              		.code	16
 145              		.thumb_func
 146              		.type	Pwm_Enable, %function
 147              	Pwm_Enable:
 148              	.LFB4:
 180:Generated_Source\PSoC4/Pwm.c **** 
 181:Generated_Source\PSoC4/Pwm.c **** 
 182:Generated_Source\PSoC4/Pwm.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/Pwm.c **** * Function Name: Pwm_Enable
 184:Generated_Source\PSoC4/Pwm.c **** ********************************************************************************
 185:Generated_Source\PSoC4/Pwm.c **** *
 186:Generated_Source\PSoC4/Pwm.c **** * Summary:
 187:Generated_Source\PSoC4/Pwm.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/Pwm.c **** *
 189:Generated_Source\PSoC4/Pwm.c **** * Parameters:
 190:Generated_Source\PSoC4/Pwm.c **** *  None
 191:Generated_Source\PSoC4/Pwm.c **** *
 192:Generated_Source\PSoC4/Pwm.c **** * Return:
 193:Generated_Source\PSoC4/Pwm.c **** *  None
 194:Generated_Source\PSoC4/Pwm.c **** *
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 7


 195:Generated_Source\PSoC4/Pwm.c **** * Side Effects:
 196:Generated_Source\PSoC4/Pwm.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/Pwm.c **** *
 198:Generated_Source\PSoC4/Pwm.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/Pwm.c **** void Pwm_Enable(void) 
 200:Generated_Source\PSoC4/Pwm.c **** {
 149              		.loc 1 200 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 00AF     		add	r7, sp, #0
 158              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC4/Pwm.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/Pwm.c ****     #if (Pwm_UsingFixedFunction)
 203:Generated_Source\PSoC4/Pwm.c ****         Pwm_GLOBAL_ENABLE |= Pwm_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/Pwm.c ****         Pwm_GLOBAL_STBY_ENABLE |= Pwm_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/Pwm.c ****     #endif /* (Pwm_UsingFixedFunction) */
 206:Generated_Source\PSoC4/Pwm.c **** 
 207:Generated_Source\PSoC4/Pwm.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/Pwm.c ****     #if (Pwm_UseControl || Pwm_UsingFixedFunction)
 209:Generated_Source\PSoC4/Pwm.c ****         Pwm_CONTROL |= Pwm_CTRL_ENABLE;
 159              		.loc 1 209 0
 160 0004 0549     		ldr	r1, .L9
 161 0006 054B     		ldr	r3, .L9
 162 0008 1B78     		ldrb	r3, [r3]
 163 000a DBB2     		uxtb	r3, r3
 164 000c 8022     		movs	r2, #128
 165 000e 5242     		rsbs	r2, r2, #0
 166 0010 1343     		orrs	r3, r2
 167 0012 DBB2     		uxtb	r3, r3
 168 0014 0B70     		strb	r3, [r1]
 210:Generated_Source\PSoC4/Pwm.c ****     #endif /* (Pwm_UseControl || Pwm_UsingFixedFunction) */
 211:Generated_Source\PSoC4/Pwm.c **** }
 169              		.loc 1 211 0
 170 0016 C046     		nop
 171 0018 BD46     		mov	sp, r7
 172              		@ sp needed
 173 001a 80BD     		pop	{r7, pc}
 174              	.L10:
 175              		.align	2
 176              	.L9:
 177 001c 72000F40 		.word	1074724978
 178              		.cfi_endproc
 179              	.LFE4:
 180              		.size	Pwm_Enable, .-Pwm_Enable
 181              		.section	.text.Pwm_Stop,"ax",%progbits
 182              		.align	2
 183              		.global	Pwm_Stop
 184              		.code	16
 185              		.thumb_func
 186              		.type	Pwm_Stop, %function
 187              	Pwm_Stop:
 188              	.LFB5:
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 8


 212:Generated_Source\PSoC4/Pwm.c **** 
 213:Generated_Source\PSoC4/Pwm.c **** 
 214:Generated_Source\PSoC4/Pwm.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/Pwm.c **** * Function Name: Pwm_Stop
 216:Generated_Source\PSoC4/Pwm.c **** ********************************************************************************
 217:Generated_Source\PSoC4/Pwm.c **** *
 218:Generated_Source\PSoC4/Pwm.c **** * Summary:
 219:Generated_Source\PSoC4/Pwm.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/Pwm.c **** *  interrupts.
 221:Generated_Source\PSoC4/Pwm.c **** *
 222:Generated_Source\PSoC4/Pwm.c **** * Parameters:
 223:Generated_Source\PSoC4/Pwm.c **** *  None
 224:Generated_Source\PSoC4/Pwm.c **** *
 225:Generated_Source\PSoC4/Pwm.c **** * Return:
 226:Generated_Source\PSoC4/Pwm.c **** *  None
 227:Generated_Source\PSoC4/Pwm.c **** *
 228:Generated_Source\PSoC4/Pwm.c **** * Side Effects:
 229:Generated_Source\PSoC4/Pwm.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/Pwm.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/Pwm.c **** *
 232:Generated_Source\PSoC4/Pwm.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/Pwm.c **** void Pwm_Stop(void) 
 234:Generated_Source\PSoC4/Pwm.c **** {
 189              		.loc 1 234 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 80B5     		push	{r7, lr}
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 00AF     		add	r7, sp, #0
 198              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC4/Pwm.c ****     #if (Pwm_UseControl || Pwm_UsingFixedFunction)
 236:Generated_Source\PSoC4/Pwm.c ****         Pwm_CONTROL &= ((uint8)(~Pwm_CTRL_ENABLE));
 199              		.loc 1 236 0
 200 0004 054A     		ldr	r2, .L12
 201 0006 054B     		ldr	r3, .L12
 202 0008 1B78     		ldrb	r3, [r3]
 203 000a DBB2     		uxtb	r3, r3
 204 000c 7F21     		movs	r1, #127
 205 000e 0B40     		ands	r3, r1
 206 0010 DBB2     		uxtb	r3, r3
 207 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/Pwm.c ****     #endif /* (Pwm_UseControl || Pwm_UsingFixedFunction) */
 238:Generated_Source\PSoC4/Pwm.c **** 
 239:Generated_Source\PSoC4/Pwm.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/Pwm.c ****     #if (Pwm_UsingFixedFunction)
 241:Generated_Source\PSoC4/Pwm.c ****         Pwm_GLOBAL_ENABLE &= ((uint8)(~Pwm_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/Pwm.c ****         Pwm_GLOBAL_STBY_ENABLE &= ((uint8)(~Pwm_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/Pwm.c ****     #endif /* (Pwm_UsingFixedFunction) */
 244:Generated_Source\PSoC4/Pwm.c **** }
 208              		.loc 1 244 0
 209 0014 C046     		nop
 210 0016 BD46     		mov	sp, r7
 211              		@ sp needed
 212 0018 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 9


 213              	.L13:
 214 001a C046     		.align	2
 215              	.L12:
 216 001c 72000F40 		.word	1074724978
 217              		.cfi_endproc
 218              	.LFE5:
 219              		.size	Pwm_Stop, .-Pwm_Stop
 220              		.section	.text.Pwm_WriteCounter,"ax",%progbits
 221              		.align	2
 222              		.global	Pwm_WriteCounter
 223              		.code	16
 224              		.thumb_func
 225              		.type	Pwm_WriteCounter, %function
 226              	Pwm_WriteCounter:
 227              	.LFB6:
 245:Generated_Source\PSoC4/Pwm.c **** 
 246:Generated_Source\PSoC4/Pwm.c **** #if (Pwm_UseOneCompareMode)
 247:Generated_Source\PSoC4/Pwm.c ****     #if (Pwm_CompareMode1SW)
 248:Generated_Source\PSoC4/Pwm.c **** 
 249:Generated_Source\PSoC4/Pwm.c **** 
 250:Generated_Source\PSoC4/Pwm.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/Pwm.c ****         * Function Name: Pwm_SetCompareMode
 252:Generated_Source\PSoC4/Pwm.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/Pwm.c ****         *
 254:Generated_Source\PSoC4/Pwm.c ****         * Summary:
 255:Generated_Source\PSoC4/Pwm.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC4/Pwm.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/Pwm.c ****         *
 258:Generated_Source\PSoC4/Pwm.c ****         * Parameters:
 259:Generated_Source\PSoC4/Pwm.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/Pwm.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/Pwm.c ****         *
 262:Generated_Source\PSoC4/Pwm.c ****         * Return:
 263:Generated_Source\PSoC4/Pwm.c ****         *  None
 264:Generated_Source\PSoC4/Pwm.c ****         *
 265:Generated_Source\PSoC4/Pwm.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/Pwm.c ****         void Pwm_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/Pwm.c ****         {
 268:Generated_Source\PSoC4/Pwm.c ****             #if(Pwm_UsingFixedFunction)
 269:Generated_Source\PSoC4/Pwm.c **** 
 270:Generated_Source\PSoC4/Pwm.c ****                 #if(0 != Pwm_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/Pwm.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << Pwm_CTRL_CMPMODE1_SHIF
 272:Generated_Source\PSoC4/Pwm.c ****                 #else
 273:Generated_Source\PSoC4/Pwm.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/Pwm.c ****                 #endif /* (0 != Pwm_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/Pwm.c **** 
 276:Generated_Source\PSoC4/Pwm.c ****                 Pwm_CONTROL3 &= ((uint8)(~Pwm_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/Pwm.c ****                 Pwm_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/Pwm.c **** 
 279:Generated_Source\PSoC4/Pwm.c ****             #elif (Pwm_UseControl)
 280:Generated_Source\PSoC4/Pwm.c **** 
 281:Generated_Source\PSoC4/Pwm.c ****                 #if(0 != Pwm_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/Pwm.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << Pwm_CTRL_CMPMODE1_SHI
 283:Generated_Source\PSoC4/Pwm.c ****                                                 Pwm_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/Pwm.c ****                 #else
 285:Generated_Source\PSoC4/Pwm.c ****                     uint8 comparemode1masked = comparemode & Pwm_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/Pwm.c ****                 #endif /* (0 != Pwm_CTRL_CMPMODE1_SHIFT) */
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 10


 287:Generated_Source\PSoC4/Pwm.c **** 
 288:Generated_Source\PSoC4/Pwm.c ****                 #if(0 != Pwm_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/Pwm.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << Pwm_CTRL_CMPMODE2_SHI
 290:Generated_Source\PSoC4/Pwm.c ****                                                Pwm_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/Pwm.c ****                 #else
 292:Generated_Source\PSoC4/Pwm.c ****                     uint8 comparemode2masked = comparemode & Pwm_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/Pwm.c ****                 #endif /* (0 != Pwm_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/Pwm.c **** 
 295:Generated_Source\PSoC4/Pwm.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/Pwm.c ****                 Pwm_CONTROL &= ((uint8)(~(Pwm_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/Pwm.c ****                                             Pwm_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/Pwm.c ****                 Pwm_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/Pwm.c **** 
 300:Generated_Source\PSoC4/Pwm.c ****             #else
 301:Generated_Source\PSoC4/Pwm.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/Pwm.c ****             #endif /* (Pwm_UsingFixedFunction) */
 303:Generated_Source\PSoC4/Pwm.c ****         }
 304:Generated_Source\PSoC4/Pwm.c ****     #endif /* Pwm_CompareMode1SW */
 305:Generated_Source\PSoC4/Pwm.c **** 
 306:Generated_Source\PSoC4/Pwm.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/Pwm.c **** 
 308:Generated_Source\PSoC4/Pwm.c ****     #if (Pwm_CompareMode1SW)
 309:Generated_Source\PSoC4/Pwm.c **** 
 310:Generated_Source\PSoC4/Pwm.c **** 
 311:Generated_Source\PSoC4/Pwm.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/Pwm.c ****         * Function Name: Pwm_SetCompareMode1
 313:Generated_Source\PSoC4/Pwm.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/Pwm.c ****         *
 315:Generated_Source\PSoC4/Pwm.c ****         * Summary:
 316:Generated_Source\PSoC4/Pwm.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/Pwm.c ****         *
 318:Generated_Source\PSoC4/Pwm.c ****         * Parameters:
 319:Generated_Source\PSoC4/Pwm.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/Pwm.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/Pwm.c ****         *
 322:Generated_Source\PSoC4/Pwm.c ****         * Return:
 323:Generated_Source\PSoC4/Pwm.c ****         *  None
 324:Generated_Source\PSoC4/Pwm.c ****         *
 325:Generated_Source\PSoC4/Pwm.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/Pwm.c ****         void Pwm_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/Pwm.c ****         {
 328:Generated_Source\PSoC4/Pwm.c ****             #if(0 != Pwm_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/Pwm.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << Pwm_CTRL_CMPMODE1_SHIFT)) 
 330:Generated_Source\PSoC4/Pwm.c ****                                            Pwm_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/Pwm.c ****             #else
 332:Generated_Source\PSoC4/Pwm.c ****                 uint8 comparemodemasked = comparemode & Pwm_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/Pwm.c ****             #endif /* (0 != Pwm_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/Pwm.c **** 
 335:Generated_Source\PSoC4/Pwm.c ****             #if (Pwm_UseControl)
 336:Generated_Source\PSoC4/Pwm.c ****                 Pwm_CONTROL &= ((uint8)(~Pwm_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/Pwm.c ****                 Pwm_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/Pwm.c ****             #endif /* (Pwm_UseControl) */
 339:Generated_Source\PSoC4/Pwm.c ****         }
 340:Generated_Source\PSoC4/Pwm.c ****     #endif /* Pwm_CompareMode1SW */
 341:Generated_Source\PSoC4/Pwm.c **** 
 342:Generated_Source\PSoC4/Pwm.c **** #if (Pwm_CompareMode2SW)
 343:Generated_Source\PSoC4/Pwm.c **** 
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 11


 344:Generated_Source\PSoC4/Pwm.c **** 
 345:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_SetCompareMode2
 347:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/Pwm.c ****     *
 349:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 350:Generated_Source\PSoC4/Pwm.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/Pwm.c ****     *
 352:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 353:Generated_Source\PSoC4/Pwm.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/Pwm.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/Pwm.c ****     *
 356:Generated_Source\PSoC4/Pwm.c ****     * Return:
 357:Generated_Source\PSoC4/Pwm.c ****     *  None
 358:Generated_Source\PSoC4/Pwm.c ****     *
 359:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/Pwm.c ****     void Pwm_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/Pwm.c ****     {
 362:Generated_Source\PSoC4/Pwm.c **** 
 363:Generated_Source\PSoC4/Pwm.c ****         #if(0 != Pwm_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/Pwm.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << Pwm_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/Pwm.c ****                                                  Pwm_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/Pwm.c ****         #else
 367:Generated_Source\PSoC4/Pwm.c ****             uint8 comparemodemasked = comparemode & Pwm_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/Pwm.c ****         #endif /* (0 != Pwm_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/Pwm.c **** 
 370:Generated_Source\PSoC4/Pwm.c ****         #if (Pwm_UseControl)
 371:Generated_Source\PSoC4/Pwm.c ****             Pwm_CONTROL &= ((uint8)(~Pwm_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/Pwm.c ****             Pwm_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_UseControl) */
 374:Generated_Source\PSoC4/Pwm.c ****     }
 375:Generated_Source\PSoC4/Pwm.c ****     #endif /*Pwm_CompareMode2SW */
 376:Generated_Source\PSoC4/Pwm.c **** 
 377:Generated_Source\PSoC4/Pwm.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/Pwm.c **** 
 379:Generated_Source\PSoC4/Pwm.c **** 
 380:Generated_Source\PSoC4/Pwm.c **** #if (!Pwm_UsingFixedFunction)
 381:Generated_Source\PSoC4/Pwm.c **** 
 382:Generated_Source\PSoC4/Pwm.c **** 
 383:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_WriteCounter
 385:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/Pwm.c ****     *
 387:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 388:Generated_Source\PSoC4/Pwm.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/Pwm.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/Pwm.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/Pwm.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/Pwm.c ****     *
 393:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 394:Generated_Source\PSoC4/Pwm.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/Pwm.c ****     *
 396:Generated_Source\PSoC4/Pwm.c ****     * Return:
 397:Generated_Source\PSoC4/Pwm.c ****     *  None
 398:Generated_Source\PSoC4/Pwm.c ****     *
 399:Generated_Source\PSoC4/Pwm.c ****     * Side Effects:
 400:Generated_Source\PSoC4/Pwm.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 12


 401:Generated_Source\PSoC4/Pwm.c ****     *
 402:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/Pwm.c ****     void Pwm_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC4/Pwm.c ****                                        
 405:Generated_Source\PSoC4/Pwm.c ****     {
 228              		.loc 1 405 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 8
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 0000 80B5     		push	{r7, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 7, -8
 235              		.cfi_offset 14, -4
 236 0002 82B0     		sub	sp, sp, #8
 237              		.cfi_def_cfa_offset 16
 238 0004 00AF     		add	r7, sp, #0
 239              		.cfi_def_cfa_register 7
 240 0006 0200     		movs	r2, r0
 241 0008 FB1D     		adds	r3, r7, #7
 242 000a 1A70     		strb	r2, [r3]
 406:Generated_Source\PSoC4/Pwm.c ****         CY_SET_REG8(Pwm_COUNTER_LSB_PTR, counter);
 243              		.loc 1 406 0
 244 000c 034A     		ldr	r2, .L15
 245 000e FB1D     		adds	r3, r7, #7
 246 0010 1B78     		ldrb	r3, [r3]
 247 0012 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC4/Pwm.c ****     }
 248              		.loc 1 407 0
 249 0014 C046     		nop
 250 0016 BD46     		mov	sp, r7
 251 0018 02B0     		add	sp, sp, #8
 252              		@ sp needed
 253 001a 80BD     		pop	{r7, pc}
 254              	.L16:
 255              		.align	2
 256              	.L15:
 257 001c 02000F40 		.word	1074724866
 258              		.cfi_endproc
 259              	.LFE6:
 260              		.size	Pwm_WriteCounter, .-Pwm_WriteCounter
 261              		.section	.text.Pwm_ReadCounter,"ax",%progbits
 262              		.align	2
 263              		.global	Pwm_ReadCounter
 264              		.code	16
 265              		.thumb_func
 266              		.type	Pwm_ReadCounter, %function
 267              	Pwm_ReadCounter:
 268              	.LFB7:
 408:Generated_Source\PSoC4/Pwm.c **** 
 409:Generated_Source\PSoC4/Pwm.c **** 
 410:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_ReadCounter
 412:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/Pwm.c ****     *
 414:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 415:Generated_Source\PSoC4/Pwm.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/Pwm.c ****     *  if the counter is enabled or running.
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 13


 417:Generated_Source\PSoC4/Pwm.c ****     *
 418:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 419:Generated_Source\PSoC4/Pwm.c ****     *  None
 420:Generated_Source\PSoC4/Pwm.c ****     *
 421:Generated_Source\PSoC4/Pwm.c ****     * Return:
 422:Generated_Source\PSoC4/Pwm.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/Pwm.c ****     *
 424:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/Pwm.c ****     uint8 Pwm_ReadCounter(void) 
 426:Generated_Source\PSoC4/Pwm.c ****     {
 269              		.loc 1 426 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 0000 80B5     		push	{r7, lr}
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 7, -8
 276              		.cfi_offset 14, -4
 277 0002 00AF     		add	r7, sp, #0
 278              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC4/Pwm.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/Pwm.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/Pwm.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/Pwm.c ****           (void)CY_GET_REG8(Pwm_COUNTERCAP_LSB_PTR_8BIT);
 279              		.loc 1 430 0
 280 0004 034B     		ldr	r3, .L19
 281 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/Pwm.c **** 
 432:Generated_Source\PSoC4/Pwm.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/Pwm.c ****         return (CY_GET_REG8(Pwm_CAPTURE_LSB_PTR));
 282              		.loc 1 433 0
 283 0008 034B     		ldr	r3, .L19+4
 284 000a 1B78     		ldrb	r3, [r3]
 285 000c DBB2     		uxtb	r3, r3
 434:Generated_Source\PSoC4/Pwm.c ****     }
 286              		.loc 1 434 0
 287 000e 1800     		movs	r0, r3
 288 0010 BD46     		mov	sp, r7
 289              		@ sp needed
 290 0012 80BD     		pop	{r7, pc}
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0014 12000F40 		.word	1074724882
 295 0018 52000F40 		.word	1074724946
 296              		.cfi_endproc
 297              	.LFE7:
 298              		.size	Pwm_ReadCounter, .-Pwm_ReadCounter
 299              		.section	.text.Pwm_WritePeriod,"ax",%progbits
 300              		.align	2
 301              		.global	Pwm_WritePeriod
 302              		.code	16
 303              		.thumb_func
 304              		.type	Pwm_WritePeriod, %function
 305              	Pwm_WritePeriod:
 306              	.LFB8:
 435:Generated_Source\PSoC4/Pwm.c **** 
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 14


 436:Generated_Source\PSoC4/Pwm.c ****     #if (Pwm_UseStatus)
 437:Generated_Source\PSoC4/Pwm.c **** 
 438:Generated_Source\PSoC4/Pwm.c **** 
 439:Generated_Source\PSoC4/Pwm.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/Pwm.c ****         * Function Name: Pwm_ClearFIFO
 441:Generated_Source\PSoC4/Pwm.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/Pwm.c ****         *
 443:Generated_Source\PSoC4/Pwm.c ****         * Summary:
 444:Generated_Source\PSoC4/Pwm.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/Pwm.c ****         *
 446:Generated_Source\PSoC4/Pwm.c ****         * Parameters:
 447:Generated_Source\PSoC4/Pwm.c ****         *  None
 448:Generated_Source\PSoC4/Pwm.c ****         *
 449:Generated_Source\PSoC4/Pwm.c ****         * Return:
 450:Generated_Source\PSoC4/Pwm.c ****         *  None
 451:Generated_Source\PSoC4/Pwm.c ****         *
 452:Generated_Source\PSoC4/Pwm.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/Pwm.c ****         void Pwm_ClearFIFO(void) 
 454:Generated_Source\PSoC4/Pwm.c ****         {
 455:Generated_Source\PSoC4/Pwm.c ****             while(0u != (Pwm_ReadStatusRegister() & Pwm_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC4/Pwm.c ****             {
 457:Generated_Source\PSoC4/Pwm.c ****                 (void)Pwm_ReadCapture();
 458:Generated_Source\PSoC4/Pwm.c ****             }
 459:Generated_Source\PSoC4/Pwm.c ****         }
 460:Generated_Source\PSoC4/Pwm.c **** 
 461:Generated_Source\PSoC4/Pwm.c ****     #endif /* Pwm_UseStatus */
 462:Generated_Source\PSoC4/Pwm.c **** 
 463:Generated_Source\PSoC4/Pwm.c **** #endif /* !Pwm_UsingFixedFunction */
 464:Generated_Source\PSoC4/Pwm.c **** 
 465:Generated_Source\PSoC4/Pwm.c **** 
 466:Generated_Source\PSoC4/Pwm.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/Pwm.c **** * Function Name: Pwm_WritePeriod
 468:Generated_Source\PSoC4/Pwm.c **** ********************************************************************************
 469:Generated_Source\PSoC4/Pwm.c **** *
 470:Generated_Source\PSoC4/Pwm.c **** * Summary:
 471:Generated_Source\PSoC4/Pwm.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/Pwm.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/Pwm.c **** *
 474:Generated_Source\PSoC4/Pwm.c **** * Parameters:
 475:Generated_Source\PSoC4/Pwm.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/Pwm.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/Pwm.c **** *
 478:Generated_Source\PSoC4/Pwm.c **** * Return:
 479:Generated_Source\PSoC4/Pwm.c **** *  None
 480:Generated_Source\PSoC4/Pwm.c **** *
 481:Generated_Source\PSoC4/Pwm.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/Pwm.c **** void Pwm_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC4/Pwm.c **** {
 307              		.loc 1 483 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 8
 310              		@ frame_needed = 1, uses_anonymous_args = 0
 311 0000 80B5     		push	{r7, lr}
 312              		.cfi_def_cfa_offset 8
 313              		.cfi_offset 7, -8
 314              		.cfi_offset 14, -4
 315 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 15


 316              		.cfi_def_cfa_offset 16
 317 0004 00AF     		add	r7, sp, #0
 318              		.cfi_def_cfa_register 7
 319 0006 0200     		movs	r2, r0
 320 0008 FB1D     		adds	r3, r7, #7
 321 000a 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC4/Pwm.c ****     #if(Pwm_UsingFixedFunction)
 485:Generated_Source\PSoC4/Pwm.c ****         CY_SET_REG16(Pwm_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/Pwm.c ****     #else
 487:Generated_Source\PSoC4/Pwm.c ****         CY_SET_REG8(Pwm_PERIOD_LSB_PTR, period);
 322              		.loc 1 487 0
 323 000c 034A     		ldr	r2, .L22
 324 000e FB1D     		adds	r3, r7, #7
 325 0010 1B78     		ldrb	r3, [r3]
 326 0012 1370     		strb	r3, [r2]
 488:Generated_Source\PSoC4/Pwm.c ****     #endif /* (Pwm_UsingFixedFunction) */
 489:Generated_Source\PSoC4/Pwm.c **** }
 327              		.loc 1 489 0
 328 0014 C046     		nop
 329 0016 BD46     		mov	sp, r7
 330 0018 02B0     		add	sp, sp, #8
 331              		@ sp needed
 332 001a 80BD     		pop	{r7, pc}
 333              	.L23:
 334              		.align	2
 335              	.L22:
 336 001c 42000F40 		.word	1074724930
 337              		.cfi_endproc
 338              	.LFE8:
 339              		.size	Pwm_WritePeriod, .-Pwm_WritePeriod
 340              		.section	.text.Pwm_WriteCompare1,"ax",%progbits
 341              		.align	2
 342              		.global	Pwm_WriteCompare1
 343              		.code	16
 344              		.thumb_func
 345              		.type	Pwm_WriteCompare1, %function
 346              	Pwm_WriteCompare1:
 347              	.LFB9:
 490:Generated_Source\PSoC4/Pwm.c **** 
 491:Generated_Source\PSoC4/Pwm.c **** #if (Pwm_UseOneCompareMode)
 492:Generated_Source\PSoC4/Pwm.c **** 
 493:Generated_Source\PSoC4/Pwm.c **** 
 494:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_WriteCompare
 496:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/Pwm.c ****     *
 498:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 499:Generated_Source\PSoC4/Pwm.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/Pwm.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/Pwm.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/Pwm.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/Pwm.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/Pwm.c ****     *
 505:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 506:Generated_Source\PSoC4/Pwm.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/Pwm.c ****     *
 508:Generated_Source\PSoC4/Pwm.c ****     * Return:
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 16


 509:Generated_Source\PSoC4/Pwm.c ****     *  None
 510:Generated_Source\PSoC4/Pwm.c ****     *
 511:Generated_Source\PSoC4/Pwm.c ****     * Side Effects:
 512:Generated_Source\PSoC4/Pwm.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC4/Pwm.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/Pwm.c ****     *
 515:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/Pwm.c ****     void Pwm_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC4/Pwm.c ****                                        
 518:Generated_Source\PSoC4/Pwm.c ****     {
 519:Generated_Source\PSoC4/Pwm.c ****         #if(Pwm_UsingFixedFunction)
 520:Generated_Source\PSoC4/Pwm.c ****             CY_SET_REG16(Pwm_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/Pwm.c ****         #else
 522:Generated_Source\PSoC4/Pwm.c ****             CY_SET_REG8(Pwm_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_UsingFixedFunction) */
 524:Generated_Source\PSoC4/Pwm.c **** 
 525:Generated_Source\PSoC4/Pwm.c ****         #if (Pwm_PWMMode == Pwm__B_PWM__DITHER)
 526:Generated_Source\PSoC4/Pwm.c ****             #if(Pwm_UsingFixedFunction)
 527:Generated_Source\PSoC4/Pwm.c ****                 CY_SET_REG16(Pwm_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/Pwm.c ****             #else
 529:Generated_Source\PSoC4/Pwm.c ****                 CY_SET_REG8(Pwm_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/Pwm.c ****             #endif /* (Pwm_UsingFixedFunction) */
 531:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_PWMMode == Pwm__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/Pwm.c ****     }
 533:Generated_Source\PSoC4/Pwm.c **** 
 534:Generated_Source\PSoC4/Pwm.c **** 
 535:Generated_Source\PSoC4/Pwm.c **** #else
 536:Generated_Source\PSoC4/Pwm.c **** 
 537:Generated_Source\PSoC4/Pwm.c **** 
 538:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_WriteCompare1
 540:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/Pwm.c ****     *
 542:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 543:Generated_Source\PSoC4/Pwm.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/Pwm.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/Pwm.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/Pwm.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/Pwm.c ****     *
 548:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 549:Generated_Source\PSoC4/Pwm.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/Pwm.c ****     *
 551:Generated_Source\PSoC4/Pwm.c ****     * Return:
 552:Generated_Source\PSoC4/Pwm.c ****     *  None
 553:Generated_Source\PSoC4/Pwm.c ****     *
 554:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/Pwm.c ****     void Pwm_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC4/Pwm.c ****                                         
 557:Generated_Source\PSoC4/Pwm.c ****     {
 348              		.loc 1 557 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 80B5     		push	{r7, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 17


 356 0002 82B0     		sub	sp, sp, #8
 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              		.cfi_def_cfa_register 7
 360 0006 0200     		movs	r2, r0
 361 0008 FB1D     		adds	r3, r7, #7
 362 000a 1A70     		strb	r2, [r3]
 558:Generated_Source\PSoC4/Pwm.c ****         #if(Pwm_UsingFixedFunction)
 559:Generated_Source\PSoC4/Pwm.c ****             CY_SET_REG16(Pwm_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/Pwm.c ****         #else
 561:Generated_Source\PSoC4/Pwm.c ****             CY_SET_REG8(Pwm_COMPARE1_LSB_PTR, compare);
 363              		.loc 1 561 0
 364 000c 034A     		ldr	r2, .L25
 365 000e FB1D     		adds	r3, r7, #7
 366 0010 1B78     		ldrb	r3, [r3]
 367 0012 1370     		strb	r3, [r2]
 562:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_UsingFixedFunction) */
 563:Generated_Source\PSoC4/Pwm.c ****     }
 368              		.loc 1 563 0
 369 0014 C046     		nop
 370 0016 BD46     		mov	sp, r7
 371 0018 02B0     		add	sp, sp, #8
 372              		@ sp needed
 373 001a 80BD     		pop	{r7, pc}
 374              	.L26:
 375              		.align	2
 376              	.L25:
 377 001c 22000F40 		.word	1074724898
 378              		.cfi_endproc
 379              	.LFE9:
 380              		.size	Pwm_WriteCompare1, .-Pwm_WriteCompare1
 381              		.section	.text.Pwm_WriteCompare2,"ax",%progbits
 382              		.align	2
 383              		.global	Pwm_WriteCompare2
 384              		.code	16
 385              		.thumb_func
 386              		.type	Pwm_WriteCompare2, %function
 387              	Pwm_WriteCompare2:
 388              	.LFB10:
 564:Generated_Source\PSoC4/Pwm.c **** 
 565:Generated_Source\PSoC4/Pwm.c **** 
 566:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_WriteCompare2
 568:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/Pwm.c ****     *
 570:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 571:Generated_Source\PSoC4/Pwm.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/Pwm.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/Pwm.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/Pwm.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/Pwm.c ****     *  mode.
 576:Generated_Source\PSoC4/Pwm.c ****     *
 577:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 578:Generated_Source\PSoC4/Pwm.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/Pwm.c ****     *
 580:Generated_Source\PSoC4/Pwm.c ****     * Return:
 581:Generated_Source\PSoC4/Pwm.c ****     *  None
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 18


 582:Generated_Source\PSoC4/Pwm.c ****     *
 583:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/Pwm.c ****     void Pwm_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC4/Pwm.c ****                                         
 586:Generated_Source\PSoC4/Pwm.c ****     {
 389              		.loc 1 586 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 8
 392              		@ frame_needed = 1, uses_anonymous_args = 0
 393 0000 80B5     		push	{r7, lr}
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 7, -8
 396              		.cfi_offset 14, -4
 397 0002 82B0     		sub	sp, sp, #8
 398              		.cfi_def_cfa_offset 16
 399 0004 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 401 0006 0200     		movs	r2, r0
 402 0008 FB1D     		adds	r3, r7, #7
 403 000a 1A70     		strb	r2, [r3]
 587:Generated_Source\PSoC4/Pwm.c ****         #if(Pwm_UsingFixedFunction)
 588:Generated_Source\PSoC4/Pwm.c ****             CY_SET_REG16(Pwm_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/Pwm.c ****         #else
 590:Generated_Source\PSoC4/Pwm.c ****             CY_SET_REG8(Pwm_COMPARE2_LSB_PTR, compare);
 404              		.loc 1 590 0
 405 000c 034A     		ldr	r2, .L28
 406 000e FB1D     		adds	r3, r7, #7
 407 0010 1B78     		ldrb	r3, [r3]
 408 0012 1370     		strb	r3, [r2]
 591:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_UsingFixedFunction) */
 592:Generated_Source\PSoC4/Pwm.c ****     }
 409              		.loc 1 592 0
 410 0014 C046     		nop
 411 0016 BD46     		mov	sp, r7
 412 0018 02B0     		add	sp, sp, #8
 413              		@ sp needed
 414 001a 80BD     		pop	{r7, pc}
 415              	.L29:
 416              		.align	2
 417              	.L28:
 418 001c 32000F40 		.word	1074724914
 419              		.cfi_endproc
 420              	.LFE10:
 421              		.size	Pwm_WriteCompare2, .-Pwm_WriteCompare2
 422              		.section	.text.Pwm_ReadControlRegister,"ax",%progbits
 423              		.align	2
 424              		.global	Pwm_ReadControlRegister
 425              		.code	16
 426              		.thumb_func
 427              		.type	Pwm_ReadControlRegister, %function
 428              	Pwm_ReadControlRegister:
 429              	.LFB11:
 593:Generated_Source\PSoC4/Pwm.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/Pwm.c **** 
 595:Generated_Source\PSoC4/Pwm.c **** #if (Pwm_DeadBandUsed)
 596:Generated_Source\PSoC4/Pwm.c **** 
 597:Generated_Source\PSoC4/Pwm.c **** 
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 19


 598:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_WriteDeadTime
 600:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/Pwm.c ****     *
 602:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 603:Generated_Source\PSoC4/Pwm.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/Pwm.c ****     *
 605:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 606:Generated_Source\PSoC4/Pwm.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/Pwm.c ****     *
 608:Generated_Source\PSoC4/Pwm.c ****     * Return:
 609:Generated_Source\PSoC4/Pwm.c ****     *  None
 610:Generated_Source\PSoC4/Pwm.c ****     *
 611:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/Pwm.c ****     void Pwm_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/Pwm.c ****     {
 614:Generated_Source\PSoC4/Pwm.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/Pwm.c ****         #if(!Pwm_DeadBand2_4)
 616:Generated_Source\PSoC4/Pwm.c ****             CY_SET_REG8(Pwm_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/Pwm.c ****         #else
 618:Generated_Source\PSoC4/Pwm.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/Pwm.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/Pwm.c ****             Pwm_DEADBAND_COUNT &= ((uint8)(~Pwm_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/Pwm.c **** 
 622:Generated_Source\PSoC4/Pwm.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/Pwm.c ****             #if(Pwm_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/Pwm.c ****                 Pwm_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << Pwm_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/Pwm.c ****                                                     Pwm_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/Pwm.c ****             #else
 627:Generated_Source\PSoC4/Pwm.c ****                 Pwm_DEADBAND_COUNT |= deadtime & Pwm_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/Pwm.c ****             #endif /* (Pwm_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/Pwm.c **** 
 630:Generated_Source\PSoC4/Pwm.c ****         #endif /* (!Pwm_DeadBand2_4) */
 631:Generated_Source\PSoC4/Pwm.c ****     }
 632:Generated_Source\PSoC4/Pwm.c **** 
 633:Generated_Source\PSoC4/Pwm.c **** 
 634:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_ReadDeadTime
 636:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/Pwm.c ****     *
 638:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 639:Generated_Source\PSoC4/Pwm.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/Pwm.c ****     *
 641:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 642:Generated_Source\PSoC4/Pwm.c ****     *  None
 643:Generated_Source\PSoC4/Pwm.c ****     *
 644:Generated_Source\PSoC4/Pwm.c ****     * Return:
 645:Generated_Source\PSoC4/Pwm.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/Pwm.c ****     *
 647:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/Pwm.c ****     uint8 Pwm_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/Pwm.c ****     {
 650:Generated_Source\PSoC4/Pwm.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/Pwm.c ****         #if(!Pwm_DeadBand2_4)
 652:Generated_Source\PSoC4/Pwm.c ****             return (CY_GET_REG8(Pwm_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/Pwm.c ****         #else
 654:Generated_Source\PSoC4/Pwm.c **** 
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 20


 655:Generated_Source\PSoC4/Pwm.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/Pwm.c ****             #if(Pwm_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC4/Pwm.c ****                 return ((uint8)(((uint8)(Pwm_DEADBAND_COUNT & Pwm_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/Pwm.c ****                                                                            Pwm_DEADBAND_COUNT_SHIFT
 659:Generated_Source\PSoC4/Pwm.c ****             #else
 660:Generated_Source\PSoC4/Pwm.c ****                 return (Pwm_DEADBAND_COUNT & Pwm_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/Pwm.c ****             #endif /* (Pwm_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/Pwm.c ****         #endif /* (!Pwm_DeadBand2_4) */
 663:Generated_Source\PSoC4/Pwm.c ****     }
 664:Generated_Source\PSoC4/Pwm.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/Pwm.c **** 
 666:Generated_Source\PSoC4/Pwm.c **** #if (Pwm_UseStatus || Pwm_UsingFixedFunction)
 667:Generated_Source\PSoC4/Pwm.c **** 
 668:Generated_Source\PSoC4/Pwm.c **** 
 669:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_SetInterruptMode
 671:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/Pwm.c ****     *
 673:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 674:Generated_Source\PSoC4/Pwm.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/Pwm.c ****     *  source status register.
 676:Generated_Source\PSoC4/Pwm.c ****     *
 677:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 678:Generated_Source\PSoC4/Pwm.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/Pwm.c ****     *
 680:Generated_Source\PSoC4/Pwm.c ****     * Return:
 681:Generated_Source\PSoC4/Pwm.c ****     *  None
 682:Generated_Source\PSoC4/Pwm.c ****     *
 683:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/Pwm.c ****     void Pwm_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/Pwm.c ****     {
 686:Generated_Source\PSoC4/Pwm.c ****         CY_SET_REG8(Pwm_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC4/Pwm.c ****     }
 688:Generated_Source\PSoC4/Pwm.c **** 
 689:Generated_Source\PSoC4/Pwm.c **** 
 690:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_ReadStatusRegister
 692:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/Pwm.c ****     *
 694:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 695:Generated_Source\PSoC4/Pwm.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/Pwm.c ****     *
 697:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 698:Generated_Source\PSoC4/Pwm.c ****     *  None
 699:Generated_Source\PSoC4/Pwm.c ****     *
 700:Generated_Source\PSoC4/Pwm.c ****     * Return:
 701:Generated_Source\PSoC4/Pwm.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/Pwm.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/Pwm.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/Pwm.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/Pwm.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/Pwm.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/Pwm.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/Pwm.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/Pwm.c ****     *
 710:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/Pwm.c ****     uint8 Pwm_ReadStatusRegister(void) 
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 21


 712:Generated_Source\PSoC4/Pwm.c ****     {
 713:Generated_Source\PSoC4/Pwm.c ****         return (CY_GET_REG8(Pwm_STATUS_PTR));
 714:Generated_Source\PSoC4/Pwm.c ****     }
 715:Generated_Source\PSoC4/Pwm.c **** 
 716:Generated_Source\PSoC4/Pwm.c **** #endif /* (Pwm_UseStatus || Pwm_UsingFixedFunction) */
 717:Generated_Source\PSoC4/Pwm.c **** 
 718:Generated_Source\PSoC4/Pwm.c **** 
 719:Generated_Source\PSoC4/Pwm.c **** #if (Pwm_UseControl)
 720:Generated_Source\PSoC4/Pwm.c **** 
 721:Generated_Source\PSoC4/Pwm.c **** 
 722:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_ReadControlRegister
 724:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/Pwm.c ****     *
 726:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 727:Generated_Source\PSoC4/Pwm.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/Pwm.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/Pwm.c ****     *
 730:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 731:Generated_Source\PSoC4/Pwm.c ****     *  None
 732:Generated_Source\PSoC4/Pwm.c ****     *
 733:Generated_Source\PSoC4/Pwm.c ****     * Return:
 734:Generated_Source\PSoC4/Pwm.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/Pwm.c ****     *
 736:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/Pwm.c ****     uint8 Pwm_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/Pwm.c ****     {
 430              		.loc 1 738 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 8
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434 0000 80B5     		push	{r7, lr}
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0002 82B0     		sub	sp, sp, #8
 439              		.cfi_def_cfa_offset 16
 440 0004 00AF     		add	r7, sp, #0
 441              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC4/Pwm.c ****         uint8 result;
 740:Generated_Source\PSoC4/Pwm.c **** 
 741:Generated_Source\PSoC4/Pwm.c ****         result = CY_GET_REG8(Pwm_CONTROL_PTR);
 442              		.loc 1 741 0
 443 0006 054A     		ldr	r2, .L32
 444 0008 FB1D     		adds	r3, r7, #7
 445 000a 1278     		ldrb	r2, [r2]
 446 000c 1A70     		strb	r2, [r3]
 742:Generated_Source\PSoC4/Pwm.c ****         return (result);
 447              		.loc 1 742 0
 448 000e FB1D     		adds	r3, r7, #7
 449 0010 1B78     		ldrb	r3, [r3]
 743:Generated_Source\PSoC4/Pwm.c ****     }
 450              		.loc 1 743 0
 451 0012 1800     		movs	r0, r3
 452 0014 BD46     		mov	sp, r7
 453 0016 02B0     		add	sp, sp, #8
 454              		@ sp needed
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 22


 455 0018 80BD     		pop	{r7, pc}
 456              	.L33:
 457 001a C046     		.align	2
 458              	.L32:
 459 001c 72000F40 		.word	1074724978
 460              		.cfi_endproc
 461              	.LFE11:
 462              		.size	Pwm_ReadControlRegister, .-Pwm_ReadControlRegister
 463              		.section	.text.Pwm_WriteControlRegister,"ax",%progbits
 464              		.align	2
 465              		.global	Pwm_WriteControlRegister
 466              		.code	16
 467              		.thumb_func
 468              		.type	Pwm_WriteControlRegister, %function
 469              	Pwm_WriteControlRegister:
 470              	.LFB12:
 744:Generated_Source\PSoC4/Pwm.c **** 
 745:Generated_Source\PSoC4/Pwm.c **** 
 746:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_WriteControlRegister
 748:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/Pwm.c ****     *
 750:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 751:Generated_Source\PSoC4/Pwm.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/Pwm.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/Pwm.c ****     *
 754:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 755:Generated_Source\PSoC4/Pwm.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/Pwm.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/Pwm.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/Pwm.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/Pwm.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/Pwm.c ****     *
 761:Generated_Source\PSoC4/Pwm.c ****     * Return:
 762:Generated_Source\PSoC4/Pwm.c ****     *  None
 763:Generated_Source\PSoC4/Pwm.c ****     *
 764:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/Pwm.c ****     void Pwm_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/Pwm.c ****     {
 471              		.loc 1 766 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 8
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475 0000 80B5     		push	{r7, lr}
 476              		.cfi_def_cfa_offset 8
 477              		.cfi_offset 7, -8
 478              		.cfi_offset 14, -4
 479 0002 82B0     		sub	sp, sp, #8
 480              		.cfi_def_cfa_offset 16
 481 0004 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 483 0006 0200     		movs	r2, r0
 484 0008 FB1D     		adds	r3, r7, #7
 485 000a 1A70     		strb	r2, [r3]
 767:Generated_Source\PSoC4/Pwm.c ****         CY_SET_REG8(Pwm_CONTROL_PTR, control);
 486              		.loc 1 767 0
 487 000c 034A     		ldr	r2, .L35
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 23


 488 000e FB1D     		adds	r3, r7, #7
 489 0010 1B78     		ldrb	r3, [r3]
 490 0012 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC4/Pwm.c ****     }
 491              		.loc 1 768 0
 492 0014 C046     		nop
 493 0016 BD46     		mov	sp, r7
 494 0018 02B0     		add	sp, sp, #8
 495              		@ sp needed
 496 001a 80BD     		pop	{r7, pc}
 497              	.L36:
 498              		.align	2
 499              	.L35:
 500 001c 72000F40 		.word	1074724978
 501              		.cfi_endproc
 502              	.LFE12:
 503              		.size	Pwm_WriteControlRegister, .-Pwm_WriteControlRegister
 504              		.section	.text.Pwm_ReadCapture,"ax",%progbits
 505              		.align	2
 506              		.global	Pwm_ReadCapture
 507              		.code	16
 508              		.thumb_func
 509              		.type	Pwm_ReadCapture, %function
 510              	Pwm_ReadCapture:
 511              	.LFB13:
 769:Generated_Source\PSoC4/Pwm.c **** 
 770:Generated_Source\PSoC4/Pwm.c **** #endif /* (Pwm_UseControl) */
 771:Generated_Source\PSoC4/Pwm.c **** 
 772:Generated_Source\PSoC4/Pwm.c **** 
 773:Generated_Source\PSoC4/Pwm.c **** #if (!Pwm_UsingFixedFunction)
 774:Generated_Source\PSoC4/Pwm.c **** 
 775:Generated_Source\PSoC4/Pwm.c **** 
 776:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_ReadCapture
 778:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/Pwm.c ****     *
 780:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 781:Generated_Source\PSoC4/Pwm.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/Pwm.c ****     *
 783:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 784:Generated_Source\PSoC4/Pwm.c ****     *  None
 785:Generated_Source\PSoC4/Pwm.c ****     *
 786:Generated_Source\PSoC4/Pwm.c ****     * Return:
 787:Generated_Source\PSoC4/Pwm.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/Pwm.c ****     *
 789:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/Pwm.c ****     uint8 Pwm_ReadCapture(void) 
 791:Generated_Source\PSoC4/Pwm.c ****     {
 512              		.loc 1 791 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 1, uses_anonymous_args = 0
 516 0000 80B5     		push	{r7, lr}
 517              		.cfi_def_cfa_offset 8
 518              		.cfi_offset 7, -8
 519              		.cfi_offset 14, -4
 520 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 24


 521              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC4/Pwm.c ****         return (CY_GET_REG8(Pwm_CAPTURE_LSB_PTR));
 522              		.loc 1 792 0
 523 0004 024B     		ldr	r3, .L39
 524 0006 1B78     		ldrb	r3, [r3]
 525 0008 DBB2     		uxtb	r3, r3
 793:Generated_Source\PSoC4/Pwm.c ****     }
 526              		.loc 1 793 0
 527 000a 1800     		movs	r0, r3
 528 000c BD46     		mov	sp, r7
 529              		@ sp needed
 530 000e 80BD     		pop	{r7, pc}
 531              	.L40:
 532              		.align	2
 533              	.L39:
 534 0010 52000F40 		.word	1074724946
 535              		.cfi_endproc
 536              	.LFE13:
 537              		.size	Pwm_ReadCapture, .-Pwm_ReadCapture
 538              		.section	.text.Pwm_ReadCompare1,"ax",%progbits
 539              		.align	2
 540              		.global	Pwm_ReadCompare1
 541              		.code	16
 542              		.thumb_func
 543              		.type	Pwm_ReadCompare1, %function
 544              	Pwm_ReadCompare1:
 545              	.LFB14:
 794:Generated_Source\PSoC4/Pwm.c **** 
 795:Generated_Source\PSoC4/Pwm.c **** #endif /* (!Pwm_UsingFixedFunction) */
 796:Generated_Source\PSoC4/Pwm.c **** 
 797:Generated_Source\PSoC4/Pwm.c **** 
 798:Generated_Source\PSoC4/Pwm.c **** #if (Pwm_UseOneCompareMode)
 799:Generated_Source\PSoC4/Pwm.c **** 
 800:Generated_Source\PSoC4/Pwm.c **** 
 801:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_ReadCompare
 803:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/Pwm.c ****     *
 805:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 806:Generated_Source\PSoC4/Pwm.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/Pwm.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/Pwm.c ****     *
 809:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 810:Generated_Source\PSoC4/Pwm.c ****     *  None
 811:Generated_Source\PSoC4/Pwm.c ****     *
 812:Generated_Source\PSoC4/Pwm.c ****     * Return:
 813:Generated_Source\PSoC4/Pwm.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/Pwm.c ****     *
 815:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/Pwm.c ****     uint8 Pwm_ReadCompare(void) 
 817:Generated_Source\PSoC4/Pwm.c ****     {
 818:Generated_Source\PSoC4/Pwm.c ****         #if(Pwm_UsingFixedFunction)
 819:Generated_Source\PSoC4/Pwm.c ****             return ((uint8)CY_GET_REG16(Pwm_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/Pwm.c ****         #else
 821:Generated_Source\PSoC4/Pwm.c ****             return (CY_GET_REG8(Pwm_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC4/Pwm.c ****         #endif /* (Pwm_UsingFixedFunction) */
 823:Generated_Source\PSoC4/Pwm.c ****     }
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 25


 824:Generated_Source\PSoC4/Pwm.c **** 
 825:Generated_Source\PSoC4/Pwm.c **** #else
 826:Generated_Source\PSoC4/Pwm.c **** 
 827:Generated_Source\PSoC4/Pwm.c **** 
 828:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_ReadCompare1
 830:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/Pwm.c ****     *
 832:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 833:Generated_Source\PSoC4/Pwm.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/Pwm.c ****     *
 835:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 836:Generated_Source\PSoC4/Pwm.c ****     *  None
 837:Generated_Source\PSoC4/Pwm.c ****     *
 838:Generated_Source\PSoC4/Pwm.c ****     * Return:
 839:Generated_Source\PSoC4/Pwm.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/Pwm.c ****     *
 841:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/Pwm.c ****     uint8 Pwm_ReadCompare1(void) 
 843:Generated_Source\PSoC4/Pwm.c ****     {
 546              		.loc 1 843 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550 0000 80B5     		push	{r7, lr}
 551              		.cfi_def_cfa_offset 8
 552              		.cfi_offset 7, -8
 553              		.cfi_offset 14, -4
 554 0002 00AF     		add	r7, sp, #0
 555              		.cfi_def_cfa_register 7
 844:Generated_Source\PSoC4/Pwm.c ****         return (CY_GET_REG8(Pwm_COMPARE1_LSB_PTR));
 556              		.loc 1 844 0
 557 0004 024B     		ldr	r3, .L43
 558 0006 1B78     		ldrb	r3, [r3]
 559 0008 DBB2     		uxtb	r3, r3
 845:Generated_Source\PSoC4/Pwm.c ****     }
 560              		.loc 1 845 0
 561 000a 1800     		movs	r0, r3
 562 000c BD46     		mov	sp, r7
 563              		@ sp needed
 564 000e 80BD     		pop	{r7, pc}
 565              	.L44:
 566              		.align	2
 567              	.L43:
 568 0010 22000F40 		.word	1074724898
 569              		.cfi_endproc
 570              	.LFE14:
 571              		.size	Pwm_ReadCompare1, .-Pwm_ReadCompare1
 572              		.section	.text.Pwm_ReadCompare2,"ax",%progbits
 573              		.align	2
 574              		.global	Pwm_ReadCompare2
 575              		.code	16
 576              		.thumb_func
 577              		.type	Pwm_ReadCompare2, %function
 578              	Pwm_ReadCompare2:
 579              	.LFB15:
 846:Generated_Source\PSoC4/Pwm.c **** 
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 26


 847:Generated_Source\PSoC4/Pwm.c **** 
 848:Generated_Source\PSoC4/Pwm.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/Pwm.c ****     * Function Name: Pwm_ReadCompare2
 850:Generated_Source\PSoC4/Pwm.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/Pwm.c ****     *
 852:Generated_Source\PSoC4/Pwm.c ****     * Summary:
 853:Generated_Source\PSoC4/Pwm.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/Pwm.c ****     *
 855:Generated_Source\PSoC4/Pwm.c ****     * Parameters:
 856:Generated_Source\PSoC4/Pwm.c ****     *  None
 857:Generated_Source\PSoC4/Pwm.c ****     *
 858:Generated_Source\PSoC4/Pwm.c ****     * Return:
 859:Generated_Source\PSoC4/Pwm.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/Pwm.c ****     *
 861:Generated_Source\PSoC4/Pwm.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/Pwm.c ****     uint8 Pwm_ReadCompare2(void) 
 863:Generated_Source\PSoC4/Pwm.c ****     {
 580              		.loc 1 863 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 1, uses_anonymous_args = 0
 584 0000 80B5     		push	{r7, lr}
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 7, -8
 587              		.cfi_offset 14, -4
 588 0002 00AF     		add	r7, sp, #0
 589              		.cfi_def_cfa_register 7
 864:Generated_Source\PSoC4/Pwm.c ****         return (CY_GET_REG8(Pwm_COMPARE2_LSB_PTR));
 590              		.loc 1 864 0
 591 0004 024B     		ldr	r3, .L47
 592 0006 1B78     		ldrb	r3, [r3]
 593 0008 DBB2     		uxtb	r3, r3
 865:Generated_Source\PSoC4/Pwm.c ****     }
 594              		.loc 1 865 0
 595 000a 1800     		movs	r0, r3
 596 000c BD46     		mov	sp, r7
 597              		@ sp needed
 598 000e 80BD     		pop	{r7, pc}
 599              	.L48:
 600              		.align	2
 601              	.L47:
 602 0010 32000F40 		.word	1074724914
 603              		.cfi_endproc
 604              	.LFE15:
 605              		.size	Pwm_ReadCompare2, .-Pwm_ReadCompare2
 606              		.section	.text.Pwm_ReadPeriod,"ax",%progbits
 607              		.align	2
 608              		.global	Pwm_ReadPeriod
 609              		.code	16
 610              		.thumb_func
 611              		.type	Pwm_ReadPeriod, %function
 612              	Pwm_ReadPeriod:
 613              	.LFB16:
 866:Generated_Source\PSoC4/Pwm.c **** 
 867:Generated_Source\PSoC4/Pwm.c **** #endif /* (Pwm_UseOneCompareMode) */
 868:Generated_Source\PSoC4/Pwm.c **** 
 869:Generated_Source\PSoC4/Pwm.c **** 
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 27


 870:Generated_Source\PSoC4/Pwm.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/Pwm.c **** * Function Name: Pwm_ReadPeriod
 872:Generated_Source\PSoC4/Pwm.c **** ********************************************************************************
 873:Generated_Source\PSoC4/Pwm.c **** *
 874:Generated_Source\PSoC4/Pwm.c **** * Summary:
 875:Generated_Source\PSoC4/Pwm.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/Pwm.c **** *
 877:Generated_Source\PSoC4/Pwm.c **** * Parameters:
 878:Generated_Source\PSoC4/Pwm.c **** *  None
 879:Generated_Source\PSoC4/Pwm.c **** *
 880:Generated_Source\PSoC4/Pwm.c **** * Return:
 881:Generated_Source\PSoC4/Pwm.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/Pwm.c **** *
 883:Generated_Source\PSoC4/Pwm.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/Pwm.c **** uint8 Pwm_ReadPeriod(void) 
 885:Generated_Source\PSoC4/Pwm.c **** {
 614              		.loc 1 885 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618 0000 80B5     		push	{r7, lr}
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 7, -8
 621              		.cfi_offset 14, -4
 622 0002 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC4/Pwm.c ****     #if(Pwm_UsingFixedFunction)
 887:Generated_Source\PSoC4/Pwm.c ****         return ((uint8)CY_GET_REG16(Pwm_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/Pwm.c ****     #else
 889:Generated_Source\PSoC4/Pwm.c ****         return (CY_GET_REG8(Pwm_PERIOD_LSB_PTR));
 624              		.loc 1 889 0
 625 0004 024B     		ldr	r3, .L51
 626 0006 1B78     		ldrb	r3, [r3]
 627 0008 DBB2     		uxtb	r3, r3
 890:Generated_Source\PSoC4/Pwm.c ****     #endif /* (Pwm_UsingFixedFunction) */
 891:Generated_Source\PSoC4/Pwm.c **** }
 628              		.loc 1 891 0
 629 000a 1800     		movs	r0, r3
 630 000c BD46     		mov	sp, r7
 631              		@ sp needed
 632 000e 80BD     		pop	{r7, pc}
 633              	.L52:
 634              		.align	2
 635              	.L51:
 636 0010 42000F40 		.word	1074724930
 637              		.cfi_endproc
 638              	.LFE16:
 639              		.size	Pwm_ReadPeriod, .-Pwm_ReadPeriod
 640              		.text
 641              	.Letext0:
 642              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 643              		.section	.debug_info,"",%progbits
 644              	.Ldebug_info0:
 645 0000 66020000 		.4byte	0x266
 646 0004 0400     		.2byte	0x4
 647 0006 00000000 		.4byte	.Ldebug_abbrev0
 648 000a 04       		.byte	0x4
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 28


 649 000b 01       		.uleb128 0x1
 650 000c E6000000 		.4byte	.LASF36
 651 0010 0C       		.byte	0xc
 652 0011 7A020000 		.4byte	.LASF37
 653 0015 EC010000 		.4byte	.LASF38
 654 0019 00000000 		.4byte	.Ldebug_ranges0+0
 655 001d 00000000 		.4byte	0
 656 0021 00000000 		.4byte	.Ldebug_line0
 657 0025 02       		.uleb128 0x2
 658 0026 01       		.byte	0x1
 659 0027 06       		.byte	0x6
 660 0028 B6020000 		.4byte	.LASF0
 661 002c 02       		.uleb128 0x2
 662 002d 01       		.byte	0x1
 663 002e 08       		.byte	0x8
 664 002f AA000000 		.4byte	.LASF1
 665 0033 02       		.uleb128 0x2
 666 0034 02       		.byte	0x2
 667 0035 05       		.byte	0x5
 668 0036 97020000 		.4byte	.LASF2
 669 003a 02       		.uleb128 0x2
 670 003b 02       		.byte	0x2
 671 003c 07       		.byte	0x7
 672 003d 28000000 		.4byte	.LASF3
 673 0041 02       		.uleb128 0x2
 674 0042 04       		.byte	0x4
 675 0043 05       		.byte	0x5
 676 0044 A1020000 		.4byte	.LASF4
 677 0048 02       		.uleb128 0x2
 678 0049 04       		.byte	0x4
 679 004a 07       		.byte	0x7
 680 004b BD000000 		.4byte	.LASF5
 681 004f 02       		.uleb128 0x2
 682 0050 08       		.byte	0x8
 683 0051 05       		.byte	0x5
 684 0052 67020000 		.4byte	.LASF6
 685 0056 02       		.uleb128 0x2
 686 0057 08       		.byte	0x8
 687 0058 07       		.byte	0x7
 688 0059 C5010000 		.4byte	.LASF7
 689 005d 03       		.uleb128 0x3
 690 005e 04       		.byte	0x4
 691 005f 05       		.byte	0x5
 692 0060 696E7400 		.ascii	"int\000"
 693 0064 02       		.uleb128 0x2
 694 0065 04       		.byte	0x4
 695 0066 07       		.byte	0x7
 696 0067 B8010000 		.4byte	.LASF8
 697 006b 04       		.uleb128 0x4
 698 006c D8000000 		.4byte	.LASF12
 699 0070 02       		.byte	0x2
 700 0071 D201     		.2byte	0x1d2
 701 0073 2C000000 		.4byte	0x2c
 702 0077 02       		.uleb128 0x2
 703 0078 04       		.byte	0x4
 704 0079 04       		.byte	0x4
 705 007a 6A000000 		.4byte	.LASF9
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 29


 706 007e 02       		.uleb128 0x2
 707 007f 08       		.byte	0x8
 708 0080 04       		.byte	0x4
 709 0081 8C010000 		.4byte	.LASF10
 710 0085 02       		.uleb128 0x2
 711 0086 01       		.byte	0x1
 712 0087 08       		.byte	0x8
 713 0088 75020000 		.4byte	.LASF11
 714 008c 04       		.uleb128 0x4
 715 008d B8000000 		.4byte	.LASF13
 716 0091 02       		.byte	0x2
 717 0092 7C02     		.2byte	0x27c
 718 0094 98000000 		.4byte	0x98
 719 0098 05       		.uleb128 0x5
 720 0099 6B000000 		.4byte	0x6b
 721 009d 02       		.uleb128 0x2
 722 009e 08       		.byte	0x8
 723 009f 04       		.byte	0x4
 724 00a0 AA020000 		.4byte	.LASF14
 725 00a4 02       		.uleb128 0x2
 726 00a5 04       		.byte	0x4
 727 00a6 07       		.byte	0x7
 728 00a7 55020000 		.4byte	.LASF15
 729 00ab 06       		.uleb128 0x6
 730 00ac AE010000 		.4byte	.LASF16
 731 00b0 01       		.byte	0x1
 732 00b1 37       		.byte	0x37
 733 00b2 00000000 		.4byte	.LFB2
 734 00b6 24000000 		.4byte	.LFE2-.LFB2
 735 00ba 01       		.uleb128 0x1
 736 00bb 9C       		.byte	0x9c
 737 00bc 07       		.uleb128 0x7
 738 00bd CF000000 		.4byte	.LASF19
 739 00c1 01       		.byte	0x1
 740 00c2 54       		.byte	0x54
 741 00c3 00000000 		.4byte	.LFB3
 742 00c7 5C000000 		.4byte	.LFE3-.LFB3
 743 00cb 01       		.uleb128 0x1
 744 00cc 9C       		.byte	0x9c
 745 00cd E0000000 		.4byte	0xe0
 746 00d1 08       		.uleb128 0x8
 747 00d2 50020000 		.4byte	.LASF27
 748 00d6 01       		.byte	0x1
 749 00d7 57       		.byte	0x57
 750 00d8 6B000000 		.4byte	0x6b
 751 00dc 02       		.uleb128 0x2
 752 00dd 91       		.byte	0x91
 753 00de 77       		.sleb128 -9
 754 00df 00       		.byte	0
 755 00e0 09       		.uleb128 0x9
 756 00e1 5F000000 		.4byte	.LASF17
 757 00e5 01       		.byte	0x1
 758 00e6 C7       		.byte	0xc7
 759 00e7 00000000 		.4byte	.LFB4
 760 00eb 20000000 		.4byte	.LFE4-.LFB4
 761 00ef 01       		.uleb128 0x1
 762 00f0 9C       		.byte	0x9c
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 30


 763 00f1 09       		.uleb128 0x9
 764 00f2 5E020000 		.4byte	.LASF18
 765 00f6 01       		.byte	0x1
 766 00f7 E9       		.byte	0xe9
 767 00f8 00000000 		.4byte	.LFB5
 768 00fc 20000000 		.4byte	.LFE5-.LFB5
 769 0100 01       		.uleb128 0x1
 770 0101 9C       		.byte	0x9c
 771 0102 0A       		.uleb128 0xa
 772 0103 00000000 		.4byte	.LASF20
 773 0107 01       		.byte	0x1
 774 0108 9301     		.2byte	0x193
 775 010a 00000000 		.4byte	.LFB6
 776 010e 20000000 		.4byte	.LFE6-.LFB6
 777 0112 01       		.uleb128 0x1
 778 0113 9C       		.byte	0x9c
 779 0114 28010000 		.4byte	0x128
 780 0118 0B       		.uleb128 0xb
 781 0119 84010000 		.4byte	.LASF22
 782 011d 01       		.byte	0x1
 783 011e 9301     		.2byte	0x193
 784 0120 6B000000 		.4byte	0x6b
 785 0124 02       		.uleb128 0x2
 786 0125 91       		.byte	0x91
 787 0126 77       		.sleb128 -9
 788 0127 00       		.byte	0
 789 0128 0C       		.uleb128 0xc
 790 0129 74010000 		.4byte	.LASF31
 791 012d 01       		.byte	0x1
 792 012e A901     		.2byte	0x1a9
 793 0130 6B000000 		.4byte	0x6b
 794 0134 00000000 		.4byte	.LFB7
 795 0138 1C000000 		.4byte	.LFE7-.LFB7
 796 013c 01       		.uleb128 0x1
 797 013d 9C       		.byte	0x9c
 798 013e 0A       		.uleb128 0xa
 799 013f DC010000 		.4byte	.LASF21
 800 0143 01       		.byte	0x1
 801 0144 E201     		.2byte	0x1e2
 802 0146 00000000 		.4byte	.LFB8
 803 014a 20000000 		.4byte	.LFE8-.LFB8
 804 014e 01       		.uleb128 0x1
 805 014f 9C       		.byte	0x9c
 806 0150 64010000 		.4byte	0x164
 807 0154 0B       		.uleb128 0xb
 808 0155 21000000 		.4byte	.LASF23
 809 0159 01       		.byte	0x1
 810 015a E201     		.2byte	0x1e2
 811 015c 6B000000 		.4byte	0x6b
 812 0160 02       		.uleb128 0x2
 813 0161 91       		.byte	0x91
 814 0162 77       		.sleb128 -9
 815 0163 00       		.byte	0
 816 0164 0A       		.uleb128 0xa
 817 0165 3B000000 		.4byte	.LASF24
 818 0169 01       		.byte	0x1
 819 016a 2B02     		.2byte	0x22b
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 31


 820 016c 00000000 		.4byte	.LFB9
 821 0170 20000000 		.4byte	.LFE9-.LFB9
 822 0174 01       		.uleb128 0x1
 823 0175 9C       		.byte	0x9c
 824 0176 8A010000 		.4byte	0x18a
 825 017a 0B       		.uleb128 0xb
 826 017b C2020000 		.4byte	.LASF25
 827 017f 01       		.byte	0x1
 828 0180 2B02     		.2byte	0x22b
 829 0182 6B000000 		.4byte	0x6b
 830 0186 02       		.uleb128 0x2
 831 0187 91       		.byte	0x91
 832 0188 77       		.sleb128 -9
 833 0189 00       		.byte	0
 834 018a 0A       		.uleb128 0xa
 835 018b 4D000000 		.4byte	.LASF26
 836 018f 01       		.byte	0x1
 837 0190 4802     		.2byte	0x248
 838 0192 00000000 		.4byte	.LFB10
 839 0196 20000000 		.4byte	.LFE10-.LFB10
 840 019a 01       		.uleb128 0x1
 841 019b 9C       		.byte	0x9c
 842 019c B0010000 		.4byte	0x1b0
 843 01a0 0B       		.uleb128 0xb
 844 01a1 C2020000 		.4byte	.LASF25
 845 01a5 01       		.byte	0x1
 846 01a6 4802     		.2byte	0x248
 847 01a8 6B000000 		.4byte	0x6b
 848 01ac 02       		.uleb128 0x2
 849 01ad 91       		.byte	0x91
 850 01ae 77       		.sleb128 -9
 851 01af 00       		.byte	0
 852 01b0 0D       		.uleb128 0xd
 853 01b1 70000000 		.4byte	.LASF39
 854 01b5 01       		.byte	0x1
 855 01b6 E102     		.2byte	0x2e1
 856 01b8 6B000000 		.4byte	0x6b
 857 01bc 00000000 		.4byte	.LFB11
 858 01c0 20000000 		.4byte	.LFE11-.LFB11
 859 01c4 01       		.uleb128 0x1
 860 01c5 9C       		.byte	0x9c
 861 01c6 DA010000 		.4byte	0x1da
 862 01ca 0E       		.uleb128 0xe
 863 01cb 49020000 		.4byte	.LASF28
 864 01cf 01       		.byte	0x1
 865 01d0 E302     		.2byte	0x2e3
 866 01d2 6B000000 		.4byte	0x6b
 867 01d6 02       		.uleb128 0x2
 868 01d7 91       		.byte	0x91
 869 01d8 77       		.sleb128 -9
 870 01d9 00       		.byte	0
 871 01da 0A       		.uleb128 0xa
 872 01db CA020000 		.4byte	.LASF29
 873 01df 01       		.byte	0x1
 874 01e0 FD02     		.2byte	0x2fd
 875 01e2 00000000 		.4byte	.LFB12
 876 01e6 20000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 32


 877 01ea 01       		.uleb128 0x1
 878 01eb 9C       		.byte	0x9c
 879 01ec 00020000 		.4byte	0x200
 880 01f0 0B       		.uleb128 0xb
 881 01f1 DE000000 		.4byte	.LASF30
 882 01f5 01       		.byte	0x1
 883 01f6 FD02     		.2byte	0x2fd
 884 01f8 6B000000 		.4byte	0x6b
 885 01fc 02       		.uleb128 0x2
 886 01fd 91       		.byte	0x91
 887 01fe 77       		.sleb128 -9
 888 01ff 00       		.byte	0
 889 0200 0C       		.uleb128 0xc
 890 0201 11000000 		.4byte	.LASF32
 891 0205 01       		.byte	0x1
 892 0206 1603     		.2byte	0x316
 893 0208 6B000000 		.4byte	0x6b
 894 020c 00000000 		.4byte	.LFB13
 895 0210 14000000 		.4byte	.LFE13-.LFB13
 896 0214 01       		.uleb128 0x1
 897 0215 9C       		.byte	0x9c
 898 0216 0C       		.uleb128 0xc
 899 0217 88000000 		.4byte	.LASF33
 900 021b 01       		.byte	0x1
 901 021c 4A03     		.2byte	0x34a
 902 021e 6B000000 		.4byte	0x6b
 903 0222 00000000 		.4byte	.LFB14
 904 0226 14000000 		.4byte	.LFE14-.LFB14
 905 022a 01       		.uleb128 0x1
 906 022b 9C       		.byte	0x9c
 907 022c 0C       		.uleb128 0xc
 908 022d 99000000 		.4byte	.LASF34
 909 0231 01       		.byte	0x1
 910 0232 5E03     		.2byte	0x35e
 911 0234 6B000000 		.4byte	0x6b
 912 0238 00000000 		.4byte	.LFB15
 913 023c 14000000 		.4byte	.LFE15-.LFB15
 914 0240 01       		.uleb128 0x1
 915 0241 9C       		.byte	0x9c
 916 0242 0C       		.uleb128 0xc
 917 0243 9F010000 		.4byte	.LASF35
 918 0247 01       		.byte	0x1
 919 0248 7403     		.2byte	0x374
 920 024a 6B000000 		.4byte	0x6b
 921 024e 00000000 		.4byte	.LFB16
 922 0252 14000000 		.4byte	.LFE16-.LFB16
 923 0256 01       		.uleb128 0x1
 924 0257 9C       		.byte	0x9c
 925 0258 0F       		.uleb128 0xf
 926 0259 93010000 		.4byte	.LASF40
 927 025d 01       		.byte	0x1
 928 025e 20       		.byte	0x20
 929 025f 6B000000 		.4byte	0x6b
 930 0263 05       		.uleb128 0x5
 931 0264 03       		.byte	0x3
 932 0265 00000000 		.4byte	Pwm_initVar
 933 0269 00       		.byte	0
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 33


 934              		.section	.debug_abbrev,"",%progbits
 935              	.Ldebug_abbrev0:
 936 0000 01       		.uleb128 0x1
 937 0001 11       		.uleb128 0x11
 938 0002 01       		.byte	0x1
 939 0003 25       		.uleb128 0x25
 940 0004 0E       		.uleb128 0xe
 941 0005 13       		.uleb128 0x13
 942 0006 0B       		.uleb128 0xb
 943 0007 03       		.uleb128 0x3
 944 0008 0E       		.uleb128 0xe
 945 0009 1B       		.uleb128 0x1b
 946 000a 0E       		.uleb128 0xe
 947 000b 55       		.uleb128 0x55
 948 000c 17       		.uleb128 0x17
 949 000d 11       		.uleb128 0x11
 950 000e 01       		.uleb128 0x1
 951 000f 10       		.uleb128 0x10
 952 0010 17       		.uleb128 0x17
 953 0011 00       		.byte	0
 954 0012 00       		.byte	0
 955 0013 02       		.uleb128 0x2
 956 0014 24       		.uleb128 0x24
 957 0015 00       		.byte	0
 958 0016 0B       		.uleb128 0xb
 959 0017 0B       		.uleb128 0xb
 960 0018 3E       		.uleb128 0x3e
 961 0019 0B       		.uleb128 0xb
 962 001a 03       		.uleb128 0x3
 963 001b 0E       		.uleb128 0xe
 964 001c 00       		.byte	0
 965 001d 00       		.byte	0
 966 001e 03       		.uleb128 0x3
 967 001f 24       		.uleb128 0x24
 968 0020 00       		.byte	0
 969 0021 0B       		.uleb128 0xb
 970 0022 0B       		.uleb128 0xb
 971 0023 3E       		.uleb128 0x3e
 972 0024 0B       		.uleb128 0xb
 973 0025 03       		.uleb128 0x3
 974 0026 08       		.uleb128 0x8
 975 0027 00       		.byte	0
 976 0028 00       		.byte	0
 977 0029 04       		.uleb128 0x4
 978 002a 16       		.uleb128 0x16
 979 002b 00       		.byte	0
 980 002c 03       		.uleb128 0x3
 981 002d 0E       		.uleb128 0xe
 982 002e 3A       		.uleb128 0x3a
 983 002f 0B       		.uleb128 0xb
 984 0030 3B       		.uleb128 0x3b
 985 0031 05       		.uleb128 0x5
 986 0032 49       		.uleb128 0x49
 987 0033 13       		.uleb128 0x13
 988 0034 00       		.byte	0
 989 0035 00       		.byte	0
 990 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 34


 991 0037 35       		.uleb128 0x35
 992 0038 00       		.byte	0
 993 0039 49       		.uleb128 0x49
 994 003a 13       		.uleb128 0x13
 995 003b 00       		.byte	0
 996 003c 00       		.byte	0
 997 003d 06       		.uleb128 0x6
 998 003e 2E       		.uleb128 0x2e
 999 003f 00       		.byte	0
 1000 0040 3F       		.uleb128 0x3f
 1001 0041 19       		.uleb128 0x19
 1002 0042 03       		.uleb128 0x3
 1003 0043 0E       		.uleb128 0xe
 1004 0044 3A       		.uleb128 0x3a
 1005 0045 0B       		.uleb128 0xb
 1006 0046 3B       		.uleb128 0x3b
 1007 0047 0B       		.uleb128 0xb
 1008 0048 27       		.uleb128 0x27
 1009 0049 19       		.uleb128 0x19
 1010 004a 11       		.uleb128 0x11
 1011 004b 01       		.uleb128 0x1
 1012 004c 12       		.uleb128 0x12
 1013 004d 06       		.uleb128 0x6
 1014 004e 40       		.uleb128 0x40
 1015 004f 18       		.uleb128 0x18
 1016 0050 9642     		.uleb128 0x2116
 1017 0052 19       		.uleb128 0x19
 1018 0053 00       		.byte	0
 1019 0054 00       		.byte	0
 1020 0055 07       		.uleb128 0x7
 1021 0056 2E       		.uleb128 0x2e
 1022 0057 01       		.byte	0x1
 1023 0058 3F       		.uleb128 0x3f
 1024 0059 19       		.uleb128 0x19
 1025 005a 03       		.uleb128 0x3
 1026 005b 0E       		.uleb128 0xe
 1027 005c 3A       		.uleb128 0x3a
 1028 005d 0B       		.uleb128 0xb
 1029 005e 3B       		.uleb128 0x3b
 1030 005f 0B       		.uleb128 0xb
 1031 0060 27       		.uleb128 0x27
 1032 0061 19       		.uleb128 0x19
 1033 0062 11       		.uleb128 0x11
 1034 0063 01       		.uleb128 0x1
 1035 0064 12       		.uleb128 0x12
 1036 0065 06       		.uleb128 0x6
 1037 0066 40       		.uleb128 0x40
 1038 0067 18       		.uleb128 0x18
 1039 0068 9642     		.uleb128 0x2116
 1040 006a 19       		.uleb128 0x19
 1041 006b 01       		.uleb128 0x1
 1042 006c 13       		.uleb128 0x13
 1043 006d 00       		.byte	0
 1044 006e 00       		.byte	0
 1045 006f 08       		.uleb128 0x8
 1046 0070 34       		.uleb128 0x34
 1047 0071 00       		.byte	0
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 35


 1048 0072 03       		.uleb128 0x3
 1049 0073 0E       		.uleb128 0xe
 1050 0074 3A       		.uleb128 0x3a
 1051 0075 0B       		.uleb128 0xb
 1052 0076 3B       		.uleb128 0x3b
 1053 0077 0B       		.uleb128 0xb
 1054 0078 49       		.uleb128 0x49
 1055 0079 13       		.uleb128 0x13
 1056 007a 02       		.uleb128 0x2
 1057 007b 18       		.uleb128 0x18
 1058 007c 00       		.byte	0
 1059 007d 00       		.byte	0
 1060 007e 09       		.uleb128 0x9
 1061 007f 2E       		.uleb128 0x2e
 1062 0080 00       		.byte	0
 1063 0081 3F       		.uleb128 0x3f
 1064 0082 19       		.uleb128 0x19
 1065 0083 03       		.uleb128 0x3
 1066 0084 0E       		.uleb128 0xe
 1067 0085 3A       		.uleb128 0x3a
 1068 0086 0B       		.uleb128 0xb
 1069 0087 3B       		.uleb128 0x3b
 1070 0088 0B       		.uleb128 0xb
 1071 0089 27       		.uleb128 0x27
 1072 008a 19       		.uleb128 0x19
 1073 008b 11       		.uleb128 0x11
 1074 008c 01       		.uleb128 0x1
 1075 008d 12       		.uleb128 0x12
 1076 008e 06       		.uleb128 0x6
 1077 008f 40       		.uleb128 0x40
 1078 0090 18       		.uleb128 0x18
 1079 0091 9742     		.uleb128 0x2117
 1080 0093 19       		.uleb128 0x19
 1081 0094 00       		.byte	0
 1082 0095 00       		.byte	0
 1083 0096 0A       		.uleb128 0xa
 1084 0097 2E       		.uleb128 0x2e
 1085 0098 01       		.byte	0x1
 1086 0099 3F       		.uleb128 0x3f
 1087 009a 19       		.uleb128 0x19
 1088 009b 03       		.uleb128 0x3
 1089 009c 0E       		.uleb128 0xe
 1090 009d 3A       		.uleb128 0x3a
 1091 009e 0B       		.uleb128 0xb
 1092 009f 3B       		.uleb128 0x3b
 1093 00a0 05       		.uleb128 0x5
 1094 00a1 27       		.uleb128 0x27
 1095 00a2 19       		.uleb128 0x19
 1096 00a3 11       		.uleb128 0x11
 1097 00a4 01       		.uleb128 0x1
 1098 00a5 12       		.uleb128 0x12
 1099 00a6 06       		.uleb128 0x6
 1100 00a7 40       		.uleb128 0x40
 1101 00a8 18       		.uleb128 0x18
 1102 00a9 9742     		.uleb128 0x2117
 1103 00ab 19       		.uleb128 0x19
 1104 00ac 01       		.uleb128 0x1
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 36


 1105 00ad 13       		.uleb128 0x13
 1106 00ae 00       		.byte	0
 1107 00af 00       		.byte	0
 1108 00b0 0B       		.uleb128 0xb
 1109 00b1 05       		.uleb128 0x5
 1110 00b2 00       		.byte	0
 1111 00b3 03       		.uleb128 0x3
 1112 00b4 0E       		.uleb128 0xe
 1113 00b5 3A       		.uleb128 0x3a
 1114 00b6 0B       		.uleb128 0xb
 1115 00b7 3B       		.uleb128 0x3b
 1116 00b8 05       		.uleb128 0x5
 1117 00b9 49       		.uleb128 0x49
 1118 00ba 13       		.uleb128 0x13
 1119 00bb 02       		.uleb128 0x2
 1120 00bc 18       		.uleb128 0x18
 1121 00bd 00       		.byte	0
 1122 00be 00       		.byte	0
 1123 00bf 0C       		.uleb128 0xc
 1124 00c0 2E       		.uleb128 0x2e
 1125 00c1 00       		.byte	0
 1126 00c2 3F       		.uleb128 0x3f
 1127 00c3 19       		.uleb128 0x19
 1128 00c4 03       		.uleb128 0x3
 1129 00c5 0E       		.uleb128 0xe
 1130 00c6 3A       		.uleb128 0x3a
 1131 00c7 0B       		.uleb128 0xb
 1132 00c8 3B       		.uleb128 0x3b
 1133 00c9 05       		.uleb128 0x5
 1134 00ca 27       		.uleb128 0x27
 1135 00cb 19       		.uleb128 0x19
 1136 00cc 49       		.uleb128 0x49
 1137 00cd 13       		.uleb128 0x13
 1138 00ce 11       		.uleb128 0x11
 1139 00cf 01       		.uleb128 0x1
 1140 00d0 12       		.uleb128 0x12
 1141 00d1 06       		.uleb128 0x6
 1142 00d2 40       		.uleb128 0x40
 1143 00d3 18       		.uleb128 0x18
 1144 00d4 9742     		.uleb128 0x2117
 1145 00d6 19       		.uleb128 0x19
 1146 00d7 00       		.byte	0
 1147 00d8 00       		.byte	0
 1148 00d9 0D       		.uleb128 0xd
 1149 00da 2E       		.uleb128 0x2e
 1150 00db 01       		.byte	0x1
 1151 00dc 3F       		.uleb128 0x3f
 1152 00dd 19       		.uleb128 0x19
 1153 00de 03       		.uleb128 0x3
 1154 00df 0E       		.uleb128 0xe
 1155 00e0 3A       		.uleb128 0x3a
 1156 00e1 0B       		.uleb128 0xb
 1157 00e2 3B       		.uleb128 0x3b
 1158 00e3 05       		.uleb128 0x5
 1159 00e4 27       		.uleb128 0x27
 1160 00e5 19       		.uleb128 0x19
 1161 00e6 49       		.uleb128 0x49
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 37


 1162 00e7 13       		.uleb128 0x13
 1163 00e8 11       		.uleb128 0x11
 1164 00e9 01       		.uleb128 0x1
 1165 00ea 12       		.uleb128 0x12
 1166 00eb 06       		.uleb128 0x6
 1167 00ec 40       		.uleb128 0x40
 1168 00ed 18       		.uleb128 0x18
 1169 00ee 9742     		.uleb128 0x2117
 1170 00f0 19       		.uleb128 0x19
 1171 00f1 01       		.uleb128 0x1
 1172 00f2 13       		.uleb128 0x13
 1173 00f3 00       		.byte	0
 1174 00f4 00       		.byte	0
 1175 00f5 0E       		.uleb128 0xe
 1176 00f6 34       		.uleb128 0x34
 1177 00f7 00       		.byte	0
 1178 00f8 03       		.uleb128 0x3
 1179 00f9 0E       		.uleb128 0xe
 1180 00fa 3A       		.uleb128 0x3a
 1181 00fb 0B       		.uleb128 0xb
 1182 00fc 3B       		.uleb128 0x3b
 1183 00fd 05       		.uleb128 0x5
 1184 00fe 49       		.uleb128 0x49
 1185 00ff 13       		.uleb128 0x13
 1186 0100 02       		.uleb128 0x2
 1187 0101 18       		.uleb128 0x18
 1188 0102 00       		.byte	0
 1189 0103 00       		.byte	0
 1190 0104 0F       		.uleb128 0xf
 1191 0105 34       		.uleb128 0x34
 1192 0106 00       		.byte	0
 1193 0107 03       		.uleb128 0x3
 1194 0108 0E       		.uleb128 0xe
 1195 0109 3A       		.uleb128 0x3a
 1196 010a 0B       		.uleb128 0xb
 1197 010b 3B       		.uleb128 0x3b
 1198 010c 0B       		.uleb128 0xb
 1199 010d 49       		.uleb128 0x49
 1200 010e 13       		.uleb128 0x13
 1201 010f 3F       		.uleb128 0x3f
 1202 0110 19       		.uleb128 0x19
 1203 0111 02       		.uleb128 0x2
 1204 0112 18       		.uleb128 0x18
 1205 0113 00       		.byte	0
 1206 0114 00       		.byte	0
 1207 0115 00       		.byte	0
 1208              		.section	.debug_aranges,"",%progbits
 1209 0000 8C000000 		.4byte	0x8c
 1210 0004 0200     		.2byte	0x2
 1211 0006 00000000 		.4byte	.Ldebug_info0
 1212 000a 04       		.byte	0x4
 1213 000b 00       		.byte	0
 1214 000c 0000     		.2byte	0
 1215 000e 0000     		.2byte	0
 1216 0010 00000000 		.4byte	.LFB2
 1217 0014 24000000 		.4byte	.LFE2-.LFB2
 1218 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 38


 1219 001c 5C000000 		.4byte	.LFE3-.LFB3
 1220 0020 00000000 		.4byte	.LFB4
 1221 0024 20000000 		.4byte	.LFE4-.LFB4
 1222 0028 00000000 		.4byte	.LFB5
 1223 002c 20000000 		.4byte	.LFE5-.LFB5
 1224 0030 00000000 		.4byte	.LFB6
 1225 0034 20000000 		.4byte	.LFE6-.LFB6
 1226 0038 00000000 		.4byte	.LFB7
 1227 003c 1C000000 		.4byte	.LFE7-.LFB7
 1228 0040 00000000 		.4byte	.LFB8
 1229 0044 20000000 		.4byte	.LFE8-.LFB8
 1230 0048 00000000 		.4byte	.LFB9
 1231 004c 20000000 		.4byte	.LFE9-.LFB9
 1232 0050 00000000 		.4byte	.LFB10
 1233 0054 20000000 		.4byte	.LFE10-.LFB10
 1234 0058 00000000 		.4byte	.LFB11
 1235 005c 20000000 		.4byte	.LFE11-.LFB11
 1236 0060 00000000 		.4byte	.LFB12
 1237 0064 20000000 		.4byte	.LFE12-.LFB12
 1238 0068 00000000 		.4byte	.LFB13
 1239 006c 14000000 		.4byte	.LFE13-.LFB13
 1240 0070 00000000 		.4byte	.LFB14
 1241 0074 14000000 		.4byte	.LFE14-.LFB14
 1242 0078 00000000 		.4byte	.LFB15
 1243 007c 14000000 		.4byte	.LFE15-.LFB15
 1244 0080 00000000 		.4byte	.LFB16
 1245 0084 14000000 		.4byte	.LFE16-.LFB16
 1246 0088 00000000 		.4byte	0
 1247 008c 00000000 		.4byte	0
 1248              		.section	.debug_ranges,"",%progbits
 1249              	.Ldebug_ranges0:
 1250 0000 00000000 		.4byte	.LFB2
 1251 0004 24000000 		.4byte	.LFE2
 1252 0008 00000000 		.4byte	.LFB3
 1253 000c 5C000000 		.4byte	.LFE3
 1254 0010 00000000 		.4byte	.LFB4
 1255 0014 20000000 		.4byte	.LFE4
 1256 0018 00000000 		.4byte	.LFB5
 1257 001c 20000000 		.4byte	.LFE5
 1258 0020 00000000 		.4byte	.LFB6
 1259 0024 20000000 		.4byte	.LFE6
 1260 0028 00000000 		.4byte	.LFB7
 1261 002c 1C000000 		.4byte	.LFE7
 1262 0030 00000000 		.4byte	.LFB8
 1263 0034 20000000 		.4byte	.LFE8
 1264 0038 00000000 		.4byte	.LFB9
 1265 003c 20000000 		.4byte	.LFE9
 1266 0040 00000000 		.4byte	.LFB10
 1267 0044 20000000 		.4byte	.LFE10
 1268 0048 00000000 		.4byte	.LFB11
 1269 004c 20000000 		.4byte	.LFE11
 1270 0050 00000000 		.4byte	.LFB12
 1271 0054 20000000 		.4byte	.LFE12
 1272 0058 00000000 		.4byte	.LFB13
 1273 005c 14000000 		.4byte	.LFE13
 1274 0060 00000000 		.4byte	.LFB14
 1275 0064 14000000 		.4byte	.LFE14
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 39


 1276 0068 00000000 		.4byte	.LFB15
 1277 006c 14000000 		.4byte	.LFE15
 1278 0070 00000000 		.4byte	.LFB16
 1279 0074 14000000 		.4byte	.LFE16
 1280 0078 00000000 		.4byte	0
 1281 007c 00000000 		.4byte	0
 1282              		.section	.debug_line,"",%progbits
 1283              	.Ldebug_line0:
 1284 0000 64010000 		.section	.debug_str,"MS",%progbits,1
 1284      02004000 
 1284      00000201 
 1284      FB0E0D00 
 1284      01010101 
 1285              	.LASF20:
 1286 0000 50776D5F 		.ascii	"Pwm_WriteCounter\000"
 1286      57726974 
 1286      65436F75 
 1286      6E746572 
 1286      00
 1287              	.LASF32:
 1288 0011 50776D5F 		.ascii	"Pwm_ReadCapture\000"
 1288      52656164 
 1288      43617074 
 1288      75726500 
 1289              	.LASF23:
 1290 0021 70657269 		.ascii	"period\000"
 1290      6F6400
 1291              	.LASF3:
 1292 0028 73686F72 		.ascii	"short unsigned int\000"
 1292      7420756E 
 1292      7369676E 
 1292      65642069 
 1292      6E7400
 1293              	.LASF24:
 1294 003b 50776D5F 		.ascii	"Pwm_WriteCompare1\000"
 1294      57726974 
 1294      65436F6D 
 1294      70617265 
 1294      3100
 1295              	.LASF26:
 1296 004d 50776D5F 		.ascii	"Pwm_WriteCompare2\000"
 1296      57726974 
 1296      65436F6D 
 1296      70617265 
 1296      3200
 1297              	.LASF17:
 1298 005f 50776D5F 		.ascii	"Pwm_Enable\000"
 1298      456E6162 
 1298      6C6500
 1299              	.LASF9:
 1300 006a 666C6F61 		.ascii	"float\000"
 1300      7400
 1301              	.LASF39:
 1302 0070 50776D5F 		.ascii	"Pwm_ReadControlRegister\000"
 1302      52656164 
 1302      436F6E74 
 1302      726F6C52 
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 40


 1302      65676973 
 1303              	.LASF33:
 1304 0088 50776D5F 		.ascii	"Pwm_ReadCompare1\000"
 1304      52656164 
 1304      436F6D70 
 1304      61726531 
 1304      00
 1305              	.LASF34:
 1306 0099 50776D5F 		.ascii	"Pwm_ReadCompare2\000"
 1306      52656164 
 1306      436F6D70 
 1306      61726532 
 1306      00
 1307              	.LASF1:
 1308 00aa 756E7369 		.ascii	"unsigned char\000"
 1308      676E6564 
 1308      20636861 
 1308      7200
 1309              	.LASF13:
 1310 00b8 72656738 		.ascii	"reg8\000"
 1310      00
 1311              	.LASF5:
 1312 00bd 6C6F6E67 		.ascii	"long unsigned int\000"
 1312      20756E73 
 1312      69676E65 
 1312      6420696E 
 1312      7400
 1313              	.LASF19:
 1314 00cf 50776D5F 		.ascii	"Pwm_Init\000"
 1314      496E6974 
 1314      00
 1315              	.LASF12:
 1316 00d8 75696E74 		.ascii	"uint8\000"
 1316      3800
 1317              	.LASF30:
 1318 00de 636F6E74 		.ascii	"control\000"
 1318      726F6C00 
 1319              	.LASF36:
 1320 00e6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1320      43313120 
 1320      352E342E 
 1320      31203230 
 1320      31363036 
 1321 0119 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1321      20726576 
 1321      6973696F 
 1321      6E203233 
 1321      37373135 
 1322 014c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1322      66756E63 
 1322      74696F6E 
 1322      2D736563 
 1322      74696F6E 
 1323              	.LASF31:
 1324 0174 50776D5F 		.ascii	"Pwm_ReadCounter\000"
 1324      52656164 
 1324      436F756E 
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 41


 1324      74657200 
 1325              	.LASF22:
 1326 0184 636F756E 		.ascii	"counter\000"
 1326      74657200 
 1327              	.LASF10:
 1328 018c 646F7562 		.ascii	"double\000"
 1328      6C6500
 1329              	.LASF40:
 1330 0193 50776D5F 		.ascii	"Pwm_initVar\000"
 1330      696E6974 
 1330      56617200 
 1331              	.LASF35:
 1332 019f 50776D5F 		.ascii	"Pwm_ReadPeriod\000"
 1332      52656164 
 1332      50657269 
 1332      6F6400
 1333              	.LASF16:
 1334 01ae 50776D5F 		.ascii	"Pwm_Start\000"
 1334      53746172 
 1334      7400
 1335              	.LASF8:
 1336 01b8 756E7369 		.ascii	"unsigned int\000"
 1336      676E6564 
 1336      20696E74 
 1336      00
 1337              	.LASF7:
 1338 01c5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1338      206C6F6E 
 1338      6720756E 
 1338      7369676E 
 1338      65642069 
 1339              	.LASF21:
 1340 01dc 50776D5F 		.ascii	"Pwm_WritePeriod\000"
 1340      57726974 
 1340      65506572 
 1340      696F6400 
 1341              	.LASF38:
 1342 01ec 433A5C55 		.ascii	"C:\\Users\\black\\OneDrive\\Documents\\PSoC Creator"
 1342      73657273 
 1342      5C626C61 
 1342      636B5C4F 
 1342      6E654472 
 1343 021a 5C424C45 		.ascii	"\\BLE_Temperature_Measurement01\\uart test.cydsn\000"
 1343      5F54656D 
 1343      70657261 
 1343      74757265 
 1343      5F4D6561 
 1344              	.LASF28:
 1345 0249 72657375 		.ascii	"result\000"
 1345      6C7400
 1346              	.LASF27:
 1347 0250 6374726C 		.ascii	"ctrl\000"
 1347      00
 1348              	.LASF15:
 1349 0255 73697A65 		.ascii	"sizetype\000"
 1349      74797065 
 1349      00
ARM GAS  C:\Users\black\AppData\Local\Temp\cclE6kbd.s 			page 42


 1350              	.LASF18:
 1351 025e 50776D5F 		.ascii	"Pwm_Stop\000"
 1351      53746F70 
 1351      00
 1352              	.LASF6:
 1353 0267 6C6F6E67 		.ascii	"long long int\000"
 1353      206C6F6E 
 1353      6720696E 
 1353      7400
 1354              	.LASF11:
 1355 0275 63686172 		.ascii	"char\000"
 1355      00
 1356              	.LASF37:
 1357 027a 47656E65 		.ascii	"Generated_Source\\PSoC4\\Pwm.c\000"
 1357      72617465 
 1357      645F536F 
 1357      75726365 
 1357      5C50536F 
 1358              	.LASF2:
 1359 0297 73686F72 		.ascii	"short int\000"
 1359      7420696E 
 1359      7400
 1360              	.LASF4:
 1361 02a1 6C6F6E67 		.ascii	"long int\000"
 1361      20696E74 
 1361      00
 1362              	.LASF14:
 1363 02aa 6C6F6E67 		.ascii	"long double\000"
 1363      20646F75 
 1363      626C6500 
 1364              	.LASF0:
 1365 02b6 7369676E 		.ascii	"signed char\000"
 1365      65642063 
 1365      68617200 
 1366              	.LASF25:
 1367 02c2 636F6D70 		.ascii	"compare\000"
 1367      61726500 
 1368              	.LASF29:
 1369 02ca 50776D5F 		.ascii	"Pwm_WriteControlRegister\000"
 1369      57726974 
 1369      65436F6E 
 1369      74726F6C 
 1369      52656769 
 1370              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
